#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tpl_mobile.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tpl_main")]
	public partial class tplDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertmstMaterial(mstMaterial instance);
    partial void UpdatemstMaterial(mstMaterial instance);
    partial void DeletemstMaterial(mstMaterial instance);
    partial void InsertmstMaterialCategory(mstMaterialCategory instance);
    partial void UpdatemstMaterialCategory(mstMaterialCategory instance);
    partial void DeletemstMaterialCategory(mstMaterialCategory instance);
    partial void InsertmstMaterialInventory(mstMaterialInventory instance);
    partial void UpdatemstMaterialInventory(mstMaterialInventory instance);
    partial void DeletemstMaterialInventory(mstMaterialInventory instance);
    partial void InsertmstMaterialUnit(mstMaterialUnit instance);
    partial void UpdatemstMaterialUnit(mstMaterialUnit instance);
    partial void DeletemstMaterialUnit(mstMaterialUnit instance);
    partial void InsertmstRoom(mstRoom instance);
    partial void UpdatemstRoom(mstRoom instance);
    partial void DeletemstRoom(mstRoom instance);
    partial void InsertmstUnit(mstUnit instance);
    partial void UpdatemstUnit(mstUnit instance);
    partial void DeletemstUnit(mstUnit instance);
    partial void InsertmstSupplier(mstSupplier instance);
    partial void UpdatemstSupplier(mstSupplier instance);
    partial void DeletemstSupplier(mstSupplier instance);
    partial void InsertmstCustomer(mstCustomer instance);
    partial void UpdatemstCustomer(mstCustomer instance);
    partial void DeletemstCustomer(mstCustomer instance);
    partial void InsertmstCompany(mstCompany instance);
    partial void UpdatemstCompany(mstCompany instance);
    partial void DeletemstCompany(mstCompany instance);
    partial void InsertMstWarehouse(MstWarehouse instance);
    partial void UpdateMstWarehouse(MstWarehouse instance);
    partial void DeleteMstWarehouse(MstWarehouse instance);
    partial void InsertsysUser(sysUser instance);
    partial void UpdatesysUser(sysUser instance);
    partial void DeletesysUser(sysUser instance);
    partial void InsertTrnPC(TrnPC instance);
    partial void UpdateTrnPC(TrnPC instance);
    partial void DeleteTrnPC(TrnPC instance);
    partial void InsertTrnPCDetail(TrnPCDetail instance);
    partial void UpdateTrnPCDetail(TrnPCDetail instance);
    partial void DeleteTrnPCDetail(TrnPCDetail instance);
    partial void InsertTrnStoragePick(TrnStoragePick instance);
    partial void UpdateTrnStoragePick(TrnStoragePick instance);
    partial void DeleteTrnStoragePick(TrnStoragePick instance);
    partial void InsertTrnStoragePickMaterial(TrnStoragePickMaterial instance);
    partial void UpdateTrnStoragePickMaterial(TrnStoragePickMaterial instance);
    partial void DeleteTrnStoragePickMaterial(TrnStoragePickMaterial instance);
    partial void InsertTrnStorageInventory(TrnStorageInventory instance);
    partial void UpdateTrnStorageInventory(TrnStorageInventory instance);
    partial void DeleteTrnStorageInventory(TrnStorageInventory instance);
    partial void InsertTrnStorageReceiving(TrnStorageReceiving instance);
    partial void UpdateTrnStorageReceiving(TrnStorageReceiving instance);
    partial void DeleteTrnStorageReceiving(TrnStorageReceiving instance);
    partial void InsertTrnStorageReceivingPallet(TrnStorageReceivingPallet instance);
    partial void UpdateTrnStorageReceivingPallet(TrnStorageReceivingPallet instance);
    partial void DeleteTrnStorageReceivingPallet(TrnStorageReceivingPallet instance);
    partial void InsertTrnStorageStockTransfer(TrnStorageStockTransfer instance);
    partial void UpdateTrnStorageStockTransfer(TrnStorageStockTransfer instance);
    partial void DeleteTrnStorageStockTransfer(TrnStorageStockTransfer instance);
    partial void InsertTrnStorageStockTransferMaterial(TrnStorageStockTransferMaterial instance);
    partial void UpdateTrnStorageStockTransferMaterial(TrnStorageStockTransferMaterial instance);
    partial void DeleteTrnStorageStockTransferMaterial(TrnStorageStockTransferMaterial instance);
    partial void InserttrnWithdrawalOrder(trnWithdrawalOrder instance);
    partial void UpdatetrnWithdrawalOrder(trnWithdrawalOrder instance);
    partial void DeletetrnWithdrawalOrder(trnWithdrawalOrder instance);
    partial void InserttrnWithdrawalOrderBatch(trnWithdrawalOrderBatch instance);
    partial void UpdatetrnWithdrawalOrderBatch(trnWithdrawalOrderBatch instance);
    partial void DeletetrnWithdrawalOrderBatch(trnWithdrawalOrderBatch instance);
    partial void InserttrnWithdrawalOrderMaterial(trnWithdrawalOrderMaterial instance);
    partial void UpdatetrnWithdrawalOrderMaterial(trnWithdrawalOrderMaterial instance);
    partial void DeletetrnWithdrawalOrderMaterial(trnWithdrawalOrderMaterial instance);
    partial void InsertmstLocation(mstLocation instance);
    partial void UpdatemstLocation(mstLocation instance);
    partial void DeletemstLocation(mstLocation instance);
    #endregion
		
		public tplDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tpl_mainConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tplDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tplDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tplDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tplDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mstMaterial> mstMaterials
		{
			get
			{
				return this.GetTable<mstMaterial>();
			}
		}
		
		public System.Data.Linq.Table<mstMaterialCategory> mstMaterialCategories
		{
			get
			{
				return this.GetTable<mstMaterialCategory>();
			}
		}
		
		public System.Data.Linq.Table<mstMaterialInventory> mstMaterialInventories
		{
			get
			{
				return this.GetTable<mstMaterialInventory>();
			}
		}
		
		public System.Data.Linq.Table<mstMaterialUnit> mstMaterialUnits
		{
			get
			{
				return this.GetTable<mstMaterialUnit>();
			}
		}
		
		public System.Data.Linq.Table<mstRoom> mstRooms
		{
			get
			{
				return this.GetTable<mstRoom>();
			}
		}
		
		public System.Data.Linq.Table<mstUnit> mstUnits
		{
			get
			{
				return this.GetTable<mstUnit>();
			}
		}
		
		public System.Data.Linq.Table<mstSupplier> mstSuppliers
		{
			get
			{
				return this.GetTable<mstSupplier>();
			}
		}
		
		public System.Data.Linq.Table<mstCustomer> mstCustomers
		{
			get
			{
				return this.GetTable<mstCustomer>();
			}
		}
		
		public System.Data.Linq.Table<mstCompany> mstCompanies
		{
			get
			{
				return this.GetTable<mstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstWarehouse> MstWarehouses
		{
			get
			{
				return this.GetTable<MstWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<sysUser> sysUsers
		{
			get
			{
				return this.GetTable<sysUser>();
			}
		}
		
		public System.Data.Linq.Table<TrnPC> TrnPCs
		{
			get
			{
				return this.GetTable<TrnPC>();
			}
		}
		
		public System.Data.Linq.Table<TrnPCDetail> TrnPCDetails
		{
			get
			{
				return this.GetTable<TrnPCDetail>();
			}
		}
		
		public System.Data.Linq.Table<TrnStoragePick> TrnStoragePicks
		{
			get
			{
				return this.GetTable<TrnStoragePick>();
			}
		}
		
		public System.Data.Linq.Table<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this.GetTable<TrnStoragePickMaterial>();
			}
		}
		
		public System.Data.Linq.Table<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this.GetTable<TrnStorageInventory>();
			}
		}
		
		public System.Data.Linq.Table<TrnStorageReceiving> TrnStorageReceivings
		{
			get
			{
				return this.GetTable<TrnStorageReceiving>();
			}
		}
		
		public System.Data.Linq.Table<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this.GetTable<TrnStorageReceivingPallet>();
			}
		}
		
		public System.Data.Linq.Table<TrnStorageStockTransfer> TrnStorageStockTransfers
		{
			get
			{
				return this.GetTable<TrnStorageStockTransfer>();
			}
		}
		
		public System.Data.Linq.Table<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this.GetTable<TrnStorageStockTransferMaterial>();
			}
		}
		
		public System.Data.Linq.Table<trnWithdrawalOrder> trnWithdrawalOrders
		{
			get
			{
				return this.GetTable<trnWithdrawalOrder>();
			}
		}
		
		public System.Data.Linq.Table<trnWithdrawalOrderBatch> trnWithdrawalOrderBatches
		{
			get
			{
				return this.GetTable<trnWithdrawalOrderBatch>();
			}
		}
		
		public System.Data.Linq.Table<trnWithdrawalOrderMaterial> trnWithdrawalOrderMaterials
		{
			get
			{
				return this.GetTable<trnWithdrawalOrderMaterial>();
			}
		}
		
		public System.Data.Linq.Table<mstLocation> mstLocations
		{
			get
			{
				return this.GetTable<mstLocation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstMaterial")]
	public partial class mstMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MaterialNumber;
		
		private string _BrandCode;
		
		private string _MaterialName;
		
		private System.Nullable<int> _NumberOfDaysToExpiry;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _MaterialCategoryId;
		
		private System.Nullable<int> _UnitId;
		
		private System.Nullable<decimal> _FixedWeight;
		
		private string _WeightType;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private System.Nullable<int> _Category;
		
		private EntitySet<mstMaterialInventory> _mstMaterialInventories;
		
		private EntitySet<TrnPCDetail> _TrnPCDetails;
		
		private EntitySet<TrnStoragePickMaterial> _TrnStoragePickMaterials;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets;
		
		private EntitySet<TrnStorageStockTransferMaterial> _TrnStorageStockTransferMaterials;
		
		private EntitySet<trnWithdrawalOrderBatch> _trnWithdrawalOrderBatches;
		
		private EntitySet<trnWithdrawalOrderMaterial> _trnWithdrawalOrderMaterials;
		
		private EntityRef<mstMaterialCategory> _mstMaterialCategory;
		
		private EntityRef<mstCustomer> _mstCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterialNumberChanging(string value);
    partial void OnMaterialNumberChanged();
    partial void OnBrandCodeChanging(string value);
    partial void OnBrandCodeChanged();
    partial void OnMaterialNameChanging(string value);
    partial void OnMaterialNameChanged();
    partial void OnNumberOfDaysToExpiryChanging(System.Nullable<int> value);
    partial void OnNumberOfDaysToExpiryChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnMaterialCategoryIdChanging(System.Nullable<int> value);
    partial void OnMaterialCategoryIdChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnFixedWeightChanging(System.Nullable<decimal> value);
    partial void OnFixedWeightChanged();
    partial void OnWeightTypeChanging(string value);
    partial void OnWeightTypeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    partial void OnCategoryChanging(System.Nullable<int> value);
    partial void OnCategoryChanged();
    #endregion
		
		public mstMaterial()
		{
			this._mstMaterialInventories = new EntitySet<mstMaterialInventory>(new Action<mstMaterialInventory>(this.attach_mstMaterialInventories), new Action<mstMaterialInventory>(this.detach_mstMaterialInventories));
			this._TrnPCDetails = new EntitySet<TrnPCDetail>(new Action<TrnPCDetail>(this.attach_TrnPCDetails), new Action<TrnPCDetail>(this.detach_TrnPCDetails));
			this._TrnStoragePickMaterials = new EntitySet<TrnStoragePickMaterial>(new Action<TrnStoragePickMaterial>(this.attach_TrnStoragePickMaterials), new Action<TrnStoragePickMaterial>(this.detach_TrnStoragePickMaterials));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageReceivingPallets = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets));
			this._TrnStorageStockTransferMaterials = new EntitySet<TrnStorageStockTransferMaterial>(new Action<TrnStorageStockTransferMaterial>(this.attach_TrnStorageStockTransferMaterials), new Action<TrnStorageStockTransferMaterial>(this.detach_TrnStorageStockTransferMaterials));
			this._trnWithdrawalOrderBatches = new EntitySet<trnWithdrawalOrderBatch>(new Action<trnWithdrawalOrderBatch>(this.attach_trnWithdrawalOrderBatches), new Action<trnWithdrawalOrderBatch>(this.detach_trnWithdrawalOrderBatches));
			this._trnWithdrawalOrderMaterials = new EntitySet<trnWithdrawalOrderMaterial>(new Action<trnWithdrawalOrderMaterial>(this.attach_trnWithdrawalOrderMaterials), new Action<trnWithdrawalOrderMaterial>(this.detach_trnWithdrawalOrderMaterials));
			this._mstMaterialCategory = default(EntityRef<mstMaterialCategory>);
			this._mstCustomer = default(EntityRef<mstCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialNumber", DbType="NVarChar(50)")]
		public string MaterialNumber
		{
			get
			{
				return this._MaterialNumber;
			}
			set
			{
				if ((this._MaterialNumber != value))
				{
					this.OnMaterialNumberChanging(value);
					this.SendPropertyChanging();
					this._MaterialNumber = value;
					this.SendPropertyChanged("MaterialNumber");
					this.OnMaterialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandCode", DbType="NVarChar(50)")]
		public string BrandCode
		{
			get
			{
				return this._BrandCode;
			}
			set
			{
				if ((this._BrandCode != value))
				{
					this.OnBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._BrandCode = value;
					this.SendPropertyChanged("BrandCode");
					this.OnBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialName", DbType="NVarChar(MAX)")]
		public string MaterialName
		{
			get
			{
				return this._MaterialName;
			}
			set
			{
				if ((this._MaterialName != value))
				{
					this.OnMaterialNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialName = value;
					this.SendPropertyChanged("MaterialName");
					this.OnMaterialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDaysToExpiry", DbType="Int")]
		public System.Nullable<int> NumberOfDaysToExpiry
		{
			get
			{
				return this._NumberOfDaysToExpiry;
			}
			set
			{
				if ((this._NumberOfDaysToExpiry != value))
				{
					this.OnNumberOfDaysToExpiryChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDaysToExpiry = value;
					this.SendPropertyChanged("NumberOfDaysToExpiry");
					this.OnNumberOfDaysToExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._mstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCategoryId", DbType="Int")]
		public System.Nullable<int> MaterialCategoryId
		{
			get
			{
				return this._MaterialCategoryId;
			}
			set
			{
				if ((this._MaterialCategoryId != value))
				{
					if (this._mstMaterialCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialCategoryId = value;
					this.SendPropertyChanged("MaterialCategoryId");
					this.OnMaterialCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> FixedWeight
		{
			get
			{
				return this._FixedWeight;
			}
			set
			{
				if ((this._FixedWeight != value))
				{
					this.OnFixedWeightChanging(value);
					this.SendPropertyChanging();
					this._FixedWeight = value;
					this.SendPropertyChanged("FixedWeight");
					this.OnFixedWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightType", DbType="NVarChar(255)")]
		public string WeightType
		{
			get
			{
				return this._WeightType;
			}
			set
			{
				if ((this._WeightType != value))
				{
					this.OnWeightTypeChanging(value);
					this.SendPropertyChanging();
					this._WeightType = value;
					this.SendPropertyChanged("WeightType");
					this.OnWeightTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int")]
		public System.Nullable<int> Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_mstMaterialInventory", Storage="_mstMaterialInventories", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<mstMaterialInventory> mstMaterialInventories
		{
			get
			{
				return this._mstMaterialInventories;
			}
			set
			{
				this._mstMaterialInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnPCDetail", Storage="_TrnPCDetails", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<TrnPCDetail> TrnPCDetails
		{
			get
			{
				return this._TrnPCDetails;
			}
			set
			{
				this._TrnPCDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStoragePickMaterial", Storage="_TrnStoragePickMaterials", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this._TrnStoragePickMaterials;
			}
			set
			{
				this._TrnStoragePickMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageReceivingPallet", Storage="_TrnStorageReceivingPallets", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this._TrnStorageReceivingPallets;
			}
			set
			{
				this._TrnStorageReceivingPallets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransferMaterials", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this._TrnStorageStockTransferMaterials;
			}
			set
			{
				this._TrnStorageStockTransferMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_trnWithdrawalOrderBatch", Storage="_trnWithdrawalOrderBatches", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<trnWithdrawalOrderBatch> trnWithdrawalOrderBatches
		{
			get
			{
				return this._trnWithdrawalOrderBatches;
			}
			set
			{
				this._trnWithdrawalOrderBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_trnWithdrawalOrderMaterial", Storage="_trnWithdrawalOrderMaterials", ThisKey="Id", OtherKey="MaterialId")]
		public EntitySet<trnWithdrawalOrderMaterial> trnWithdrawalOrderMaterials
		{
			get
			{
				return this._trnWithdrawalOrderMaterials;
			}
			set
			{
				this._trnWithdrawalOrderMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterialCategory_mstMaterial", Storage="_mstMaterialCategory", ThisKey="MaterialCategoryId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterialCategory mstMaterialCategory
		{
			get
			{
				return this._mstMaterialCategory.Entity;
			}
			set
			{
				mstMaterialCategory previousValue = this._mstMaterialCategory.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterialCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterialCategory.Entity = null;
						previousValue.mstMaterials.Remove(this);
					}
					this._mstMaterialCategory.Entity = value;
					if ((value != null))
					{
						value.mstMaterials.Add(this);
						this._MaterialCategoryId = value.Id;
					}
					else
					{
						this._MaterialCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstMaterialCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_mstMaterial", Storage="_mstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public mstCustomer mstCustomer
		{
			get
			{
				return this._mstCustomer.Entity;
			}
			set
			{
				mstCustomer previousValue = this._mstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._mstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCustomer.Entity = null;
						previousValue.mstMaterials.Remove(this);
					}
					this._mstCustomer.Entity = value;
					if ((value != null))
					{
						value.mstMaterials.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
		
		private void attach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = this;
		}
		
		private void detach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstMaterialCategory")]
	public partial class mstMaterialCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MaterialCategoryNumber;
		
		private string _MaterialCategoryName;
		
		private string _MaterialInitials;
		
		private System.Nullable<int> _UnitId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntitySet<mstMaterial> _mstMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterialCategoryNumberChanging(string value);
    partial void OnMaterialCategoryNumberChanged();
    partial void OnMaterialCategoryNameChanging(string value);
    partial void OnMaterialCategoryNameChanged();
    partial void OnMaterialInitialsChanging(string value);
    partial void OnMaterialInitialsChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstMaterialCategory()
		{
			this._mstMaterials = new EntitySet<mstMaterial>(new Action<mstMaterial>(this.attach_mstMaterials), new Action<mstMaterial>(this.detach_mstMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCategoryNumber", DbType="NVarChar(50)")]
		public string MaterialCategoryNumber
		{
			get
			{
				return this._MaterialCategoryNumber;
			}
			set
			{
				if ((this._MaterialCategoryNumber != value))
				{
					this.OnMaterialCategoryNumberChanging(value);
					this.SendPropertyChanging();
					this._MaterialCategoryNumber = value;
					this.SendPropertyChanged("MaterialCategoryNumber");
					this.OnMaterialCategoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCategoryName", DbType="NVarChar(MAX)")]
		public string MaterialCategoryName
		{
			get
			{
				return this._MaterialCategoryName;
			}
			set
			{
				if ((this._MaterialCategoryName != value))
				{
					this.OnMaterialCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialCategoryName = value;
					this.SendPropertyChanged("MaterialCategoryName");
					this.OnMaterialCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialInitials", DbType="NVarChar(10)")]
		public string MaterialInitials
		{
			get
			{
				return this._MaterialInitials;
			}
			set
			{
				if ((this._MaterialInitials != value))
				{
					this.OnMaterialInitialsChanging(value);
					this.SendPropertyChanging();
					this._MaterialInitials = value;
					this.SendPropertyChanged("MaterialInitials");
					this.OnMaterialInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterialCategory_mstMaterial", Storage="_mstMaterials", ThisKey="Id", OtherKey="MaterialCategoryId")]
		public EntitySet<mstMaterial> mstMaterials
		{
			get
			{
				return this._mstMaterials;
			}
			set
			{
				this._mstMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterials(mstMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterialCategory = this;
		}
		
		private void detach_mstMaterials(mstMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstMaterialCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstMaterialInventory")]
	public partial class mstMaterialInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _WarehouseId;
		
		private System.Nullable<int> _MaterialId;
		
		private System.Nullable<int> _ReceivingId;
		
		private System.Nullable<int> _ConversionId;
		
		private string _Barcode;
		
		private System.Nullable<decimal> _InQuantity;
		
		private System.Nullable<decimal> _OutQuantity;
		
		private System.Nullable<decimal> _OnHandQuantity;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _LocationId;
		
		private System.Nullable<decimal> _OrigQuantity;
		
		private System.Nullable<decimal> _OrigWeight;
		
		private System.Nullable<decimal> _Factor;
		
		private System.Nullable<int> _UnitId;
		
		private string _ConversionType;
		
		private System.Nullable<short> _select;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWarehouseIdChanging(System.Nullable<int> value);
    partial void OnWarehouseIdChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnReceivingIdChanging(System.Nullable<int> value);
    partial void OnReceivingIdChanged();
    partial void OnConversionIdChanging(System.Nullable<int> value);
    partial void OnConversionIdChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnInQuantityChanging(System.Nullable<decimal> value);
    partial void OnInQuantityChanged();
    partial void OnOutQuantityChanging(System.Nullable<decimal> value);
    partial void OnOutQuantityChanged();
    partial void OnOnHandQuantityChanging(System.Nullable<decimal> value);
    partial void OnOnHandQuantityChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnOrigQuantityChanging(System.Nullable<decimal> value);
    partial void OnOrigQuantityChanged();
    partial void OnOrigWeightChanging(System.Nullable<decimal> value);
    partial void OnOrigWeightChanged();
    partial void OnFactorChanging(System.Nullable<decimal> value);
    partial void OnFactorChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnConversionTypeChanging(string value);
    partial void OnConversionTypeChanged();
    partial void OnselectChanging(System.Nullable<short> value);
    partial void OnselectChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstMaterialInventory()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int")]
		public System.Nullable<int> WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingId", DbType="Int")]
		public System.Nullable<int> ReceivingId
		{
			get
			{
				return this._ReceivingId;
			}
			set
			{
				if ((this._ReceivingId != value))
				{
					this.OnReceivingIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivingId = value;
					this.SendPropertyChanged("ReceivingId");
					this.OnReceivingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionId", DbType="Int")]
		public System.Nullable<int> ConversionId
		{
			get
			{
				return this._ConversionId;
			}
			set
			{
				if ((this._ConversionId != value))
				{
					this.OnConversionIdChanging(value);
					this.SendPropertyChanging();
					this._ConversionId = value;
					this.SendPropertyChanged("ConversionId");
					this.OnConversionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InQuantity
		{
			get
			{
				return this._InQuantity;
			}
			set
			{
				if ((this._InQuantity != value))
				{
					this.OnInQuantityChanging(value);
					this.SendPropertyChanging();
					this._InQuantity = value;
					this.SendPropertyChanged("InQuantity");
					this.OnInQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OutQuantity
		{
			get
			{
				return this._OutQuantity;
			}
			set
			{
				if ((this._OutQuantity != value))
				{
					this.OnOutQuantityChanging(value);
					this.SendPropertyChanging();
					this._OutQuantity = value;
					this.SendPropertyChanged("OutQuantity");
					this.OnOutQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnHandQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OnHandQuantity
		{
			get
			{
				return this._OnHandQuantity;
			}
			set
			{
				if ((this._OnHandQuantity != value))
				{
					this.OnOnHandQuantityChanging(value);
					this.SendPropertyChanging();
					this._OnHandQuantity = value;
					this.SendPropertyChanged("OnHandQuantity");
					this.OnOnHandQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OrigQuantity
		{
			get
			{
				return this._OrigQuantity;
			}
			set
			{
				if ((this._OrigQuantity != value))
				{
					this.OnOrigQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrigQuantity = value;
					this.SendPropertyChanged("OrigQuantity");
					this.OnOrigQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OrigWeight
		{
			get
			{
				return this._OrigWeight;
			}
			set
			{
				if ((this._OrigWeight != value))
				{
					this.OnOrigWeightChanging(value);
					this.SendPropertyChanging();
					this._OrigWeight = value;
					this.SendPropertyChanged("OrigWeight");
					this.OnOrigWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionType", DbType="NVarChar(MAX)")]
		public string ConversionType
		{
			get
			{
				return this._ConversionType;
			}
			set
			{
				if ((this._ConversionType != value))
				{
					this.OnConversionTypeChanging(value);
					this.SendPropertyChanging();
					this._ConversionType = value;
					this.SendPropertyChanged("ConversionType");
					this.OnConversionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[select]", Storage="_select", DbType="SmallInt")]
		public System.Nullable<short> select
		{
			get
			{
				return this._select;
			}
			set
			{
				if ((this._select != value))
				{
					this.OnselectChanging(value);
					this.SendPropertyChanging();
					this._select = value;
					this.SendPropertyChanged("select");
					this.OnselectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_mstMaterialInventory", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.mstMaterialInventories.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.mstMaterialInventories.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_mstMaterialInventory", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.mstMaterialInventories.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.mstMaterialInventories.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_mstMaterialInventory", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.mstMaterialInventories.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.mstMaterialInventories.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_mstMaterialInventory", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.mstMaterialInventories.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.mstMaterialInventories.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstMaterialUnit")]
	public partial class mstMaterialUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _MaterialId;
		
		private System.Nullable<int> _UnitId;
		
		private System.Nullable<int> _ConvertedUnitId;
		
		private System.Nullable<decimal> _Factor;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnConvertedUnitIdChanging(System.Nullable<int> value);
    partial void OnConvertedUnitIdChanged();
    partial void OnFactorChanging(System.Nullable<decimal> value);
    partial void OnFactorChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstMaterialUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertedUnitId", DbType="Int")]
		public System.Nullable<int> ConvertedUnitId
		{
			get
			{
				return this._ConvertedUnitId;
			}
			set
			{
				if ((this._ConvertedUnitId != value))
				{
					this.OnConvertedUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ConvertedUnitId = value;
					this.SendPropertyChanged("ConvertedUnitId");
					this.OnConvertedUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstRoom")]
	public partial class mstRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RoomNumber;
		
		private string _RoomName;
		
		private System.Nullable<decimal> _TemperatureFrom;
		
		private System.Nullable<decimal> _TemperatureTo;
		
		private System.Nullable<int> _Unit;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntitySet<mstLocation> _mstLocations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnRoomNameChanging(string value);
    partial void OnRoomNameChanged();
    partial void OnTemperatureFromChanging(System.Nullable<decimal> value);
    partial void OnTemperatureFromChanged();
    partial void OnTemperatureToChanging(System.Nullable<decimal> value);
    partial void OnTemperatureToChanged();
    partial void OnUnitChanging(System.Nullable<int> value);
    partial void OnUnitChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstRoom()
		{
			this._mstLocations = new EntitySet<mstLocation>(new Action<mstLocation>(this.attach_mstLocations), new Action<mstLocation>(this.detach_mstLocations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="NVarChar(50)")]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="NVarChar(MAX)")]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this.OnRoomNameChanging(value);
					this.SendPropertyChanging();
					this._RoomName = value;
					this.SendPropertyChanged("RoomName");
					this.OnRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperatureFrom", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TemperatureFrom
		{
			get
			{
				return this._TemperatureFrom;
			}
			set
			{
				if ((this._TemperatureFrom != value))
				{
					this.OnTemperatureFromChanging(value);
					this.SendPropertyChanging();
					this._TemperatureFrom = value;
					this.SendPropertyChanged("TemperatureFrom");
					this.OnTemperatureFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperatureTo", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TemperatureTo
		{
			get
			{
				return this._TemperatureTo;
			}
			set
			{
				if ((this._TemperatureTo != value))
				{
					this.OnTemperatureToChanging(value);
					this.SendPropertyChanging();
					this._TemperatureTo = value;
					this.SendPropertyChanged("TemperatureTo");
					this.OnTemperatureToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Int")]
		public System.Nullable<int> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRoom_mstLocation", Storage="_mstLocations", ThisKey="Id", OtherKey="RoomId")]
		public EntitySet<mstLocation> mstLocations
		{
			get
			{
				return this._mstLocations;
			}
			set
			{
				this._mstLocations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstLocations(mstLocation entity)
		{
			this.SendPropertyChanging();
			entity.mstRoom = this;
		}
		
		private void detach_mstLocations(mstLocation entity)
		{
			this.SendPropertyChanging();
			entity.mstRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUnit")]
	public partial class mstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UnitNumber;
		
		private string _UnitName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntitySet<mstMaterialInventory> _mstMaterialInventories;
		
		private EntitySet<TrnStoragePickMaterial> _TrnStoragePickMaterials;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets;
		
		private EntitySet<TrnStorageStockTransferMaterial> _TrnStorageStockTransferMaterials;
		
		private EntitySet<trnWithdrawalOrderBatch> _trnWithdrawalOrderBatches;
		
		private EntitySet<trnWithdrawalOrderMaterial> _trnWithdrawalOrderMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitNumberChanging(string value);
    partial void OnUnitNumberChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstUnit()
		{
			this._mstMaterialInventories = new EntitySet<mstMaterialInventory>(new Action<mstMaterialInventory>(this.attach_mstMaterialInventories), new Action<mstMaterialInventory>(this.detach_mstMaterialInventories));
			this._TrnStoragePickMaterials = new EntitySet<TrnStoragePickMaterial>(new Action<TrnStoragePickMaterial>(this.attach_TrnStoragePickMaterials), new Action<TrnStoragePickMaterial>(this.detach_TrnStoragePickMaterials));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageReceivingPallets = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets));
			this._TrnStorageStockTransferMaterials = new EntitySet<TrnStorageStockTransferMaterial>(new Action<TrnStorageStockTransferMaterial>(this.attach_TrnStorageStockTransferMaterials), new Action<TrnStorageStockTransferMaterial>(this.detach_TrnStorageStockTransferMaterials));
			this._trnWithdrawalOrderBatches = new EntitySet<trnWithdrawalOrderBatch>(new Action<trnWithdrawalOrderBatch>(this.attach_trnWithdrawalOrderBatches), new Action<trnWithdrawalOrderBatch>(this.detach_trnWithdrawalOrderBatches));
			this._trnWithdrawalOrderMaterials = new EntitySet<trnWithdrawalOrderMaterial>(new Action<trnWithdrawalOrderMaterial>(this.attach_trnWithdrawalOrderMaterials), new Action<trnWithdrawalOrderMaterial>(this.detach_trnWithdrawalOrderMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNumber", DbType="NVarChar(50)")]
		public string UnitNumber
		{
			get
			{
				return this._UnitNumber;
			}
			set
			{
				if ((this._UnitNumber != value))
				{
					this.OnUnitNumberChanging(value);
					this.SendPropertyChanging();
					this._UnitNumber = value;
					this.SendPropertyChanged("UnitNumber");
					this.OnUnitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(MAX)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_mstMaterialInventory", Storage="_mstMaterialInventories", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<mstMaterialInventory> mstMaterialInventories
		{
			get
			{
				return this._mstMaterialInventories;
			}
			set
			{
				this._mstMaterialInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStoragePickMaterial", Storage="_TrnStoragePickMaterials", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this._TrnStoragePickMaterials;
			}
			set
			{
				this._TrnStoragePickMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageReceivingPallet", Storage="_TrnStorageReceivingPallets", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this._TrnStorageReceivingPallets;
			}
			set
			{
				this._TrnStorageReceivingPallets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransferMaterials", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this._TrnStorageStockTransferMaterials;
			}
			set
			{
				this._TrnStorageStockTransferMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_trnWithdrawalOrderBatch", Storage="_trnWithdrawalOrderBatches", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<trnWithdrawalOrderBatch> trnWithdrawalOrderBatches
		{
			get
			{
				return this._trnWithdrawalOrderBatches;
			}
			set
			{
				this._trnWithdrawalOrderBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_trnWithdrawalOrderMaterial", Storage="_trnWithdrawalOrderMaterials", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<trnWithdrawalOrderMaterial> trnWithdrawalOrderMaterials
		{
			get
			{
				return this._trnWithdrawalOrderMaterials;
			}
			set
			{
				this._trnWithdrawalOrderMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
		
		private void attach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = this;
		}
		
		private void detach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstSupplier")]
	public partial class mstSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SupplierNumber;
		
		private string _SupplierName;
		
		private string _Address;
		
		private int _ChartOfAccountId;
		
		private decimal _CreditLimit;
		
		private int _TermId;
		
		private string _EmailAddress;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private string _ContactPosition;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private short _IsLocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierNumberChanging(string value);
    partial void OnSupplierNumberChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnChartOfAccountIdChanging(int value);
    partial void OnChartOfAccountIdChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPositionChanging(string value);
    partial void OnContactPositionChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstSupplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierNumber
		{
			get
			{
				return this._SupplierNumber;
			}
			set
			{
				if ((this._SupplierNumber != value))
				{
					this.OnSupplierNumberChanging(value);
					this.SendPropertyChanging();
					this._SupplierNumber = value;
					this.SendPropertyChanged("SupplierNumber");
					this.OnSupplierNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartOfAccountId", DbType="Int NOT NULL")]
		public int ChartOfAccountId
		{
			get
			{
				return this._ChartOfAccountId;
			}
			set
			{
				if ((this._ChartOfAccountId != value))
				{
					this.OnChartOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ChartOfAccountId = value;
					this.SendPropertyChanged("ChartOfAccountId");
					this.OnChartOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPosition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPosition
		{
			get
			{
				return this._ContactPosition;
			}
			set
			{
				if ((this._ContactPosition != value))
				{
					this.OnContactPositionChanging(value);
					this.SendPropertyChanging();
					this._ContactPosition = value;
					this.SendPropertyChanged("ContactPosition");
					this.OnContactPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCustomer")]
	public partial class mstCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerNumber;
		
		private string _CustomerName;
		
		private int _ChartOfAccountId;
		
		private decimal _CreditLimit;
		
		private int _TermId;
		
		private string _Address;
		
		private string _EmailAddress;
		
		private string _TINNumber;
		
		private string _FaxNumber;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private string _ContactPosition;
		
		private string _SalesPerson;
		
		private int _VatId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private short _IsLocked;
		
		private string _Status;
		
		private EntitySet<mstMaterial> _mstMaterials;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageReceiving> _TrnStorageReceivings;
		
		private EntitySet<trnWithdrawalOrder> _trnWithdrawalOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnChartOfAccountIdChanging(int value);
    partial void OnChartOfAccountIdChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTINNumberChanging(string value);
    partial void OnTINNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPositionChanging(string value);
    partial void OnContactPositionChanged();
    partial void OnSalesPersonChanging(string value);
    partial void OnSalesPersonChanged();
    partial void OnVatIdChanging(int value);
    partial void OnVatIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public mstCustomer()
		{
			this._mstMaterials = new EntitySet<mstMaterial>(new Action<mstMaterial>(this.attach_mstMaterials), new Action<mstMaterial>(this.detach_mstMaterials));
			this._TrnStoragePicks = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks), new Action<TrnStoragePick>(this.detach_TrnStoragePicks));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageReceivings = new EntitySet<TrnStorageReceiving>(new Action<TrnStorageReceiving>(this.attach_TrnStorageReceivings), new Action<TrnStorageReceiving>(this.detach_TrnStorageReceivings));
			this._trnWithdrawalOrders = new EntitySet<trnWithdrawalOrder>(new Action<trnWithdrawalOrder>(this.attach_trnWithdrawalOrders), new Action<trnWithdrawalOrder>(this.detach_trnWithdrawalOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartOfAccountId", DbType="Int NOT NULL")]
		public int ChartOfAccountId
		{
			get
			{
				return this._ChartOfAccountId;
			}
			set
			{
				if ((this._ChartOfAccountId != value))
				{
					this.OnChartOfAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ChartOfAccountId = value;
					this.SendPropertyChanged("ChartOfAccountId");
					this.OnChartOfAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,4) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TINNumber
		{
			get
			{
				return this._TINNumber;
			}
			set
			{
				if ((this._TINNumber != value))
				{
					this.OnTINNumberChanging(value);
					this.SendPropertyChanging();
					this._TINNumber = value;
					this.SendPropertyChanged("TINNumber");
					this.OnTINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPosition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPosition
		{
			get
			{
				return this._ContactPosition;
			}
			set
			{
				if ((this._ContactPosition != value))
				{
					this.OnContactPositionChanging(value);
					this.SendPropertyChanging();
					this._ContactPosition = value;
					this.SendPropertyChanged("ContactPosition");
					this.OnContactPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SalesPerson
		{
			get
			{
				return this._SalesPerson;
			}
			set
			{
				if ((this._SalesPerson != value))
				{
					this.OnSalesPersonChanging(value);
					this.SendPropertyChanging();
					this._SalesPerson = value;
					this.SendPropertyChanged("SalesPerson");
					this.OnSalesPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatId", DbType="Int NOT NULL")]
		public int VatId
		{
			get
			{
				return this._VatId;
			}
			set
			{
				if ((this._VatId != value))
				{
					this.OnVatIdChanging(value);
					this.SendPropertyChanging();
					this._VatId = value;
					this.SendPropertyChanged("VatId");
					this.OnVatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_mstMaterial", Storage="_mstMaterials", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<mstMaterial> mstMaterials
		{
			get
			{
				return this._mstMaterials;
			}
			set
			{
				this._mstMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStoragePick", Storage="_TrnStoragePicks", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnStoragePick> TrnStoragePicks
		{
			get
			{
				return this._TrnStoragePicks;
			}
			set
			{
				this._TrnStoragePicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStorageReceiving", Storage="_TrnStorageReceivings", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnStorageReceiving> TrnStorageReceivings
		{
			get
			{
				return this._TrnStorageReceivings;
			}
			set
			{
				this._TrnStorageReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_trnWithdrawalOrder", Storage="_trnWithdrawalOrders", ThisKey="Id", OtherKey="CustomerID")]
		public EntitySet<trnWithdrawalOrder> trnWithdrawalOrders
		{
			get
			{
				return this._trnWithdrawalOrders;
			}
			set
			{
				this._trnWithdrawalOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterials(mstMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = this;
		}
		
		private void detach_mstMaterials(mstMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = null;
		}
		
		private void attach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = this;
		}
		
		private void detach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = null;
		}
		
		private void attach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = this;
		}
		
		private void detach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = null;
		}
		
		private void attach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = this;
		}
		
		private void detach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.mstCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstCompany")]
	public partial class mstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _companyName;
		
		private string _companyAddress;
		
		private string _logoPicturePath;
		
		private string _contactNo;
		
		private string _tin;
		
		private string _bookNo;
		
		private string _accreditNo;
		
		private string _serialNo;
		
		private string _permitNo;
		
		private string _machineNo;
		
		private string _operatedBy;
		
		private string _systemPath;
		
		private System.Nullable<int> _currentUser;
		
		private string _defaultStation;
		
		private System.Nullable<int> _DefaultApproveBy;
		
		private System.Nullable<int> _Accountant;
		
		private System.Nullable<int> _FinanceManager;
		
		private System.Nullable<int> _OperationsManager;
		
		private System.Nullable<int> _ManagingDirector;
		
		private EntitySet<MstWarehouse> _MstWarehouses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyAddressChanging(string value);
    partial void OncompanyAddressChanged();
    partial void OnlogoPicturePathChanging(string value);
    partial void OnlogoPicturePathChanged();
    partial void OncontactNoChanging(string value);
    partial void OncontactNoChanged();
    partial void OntinChanging(string value);
    partial void OntinChanged();
    partial void OnbookNoChanging(string value);
    partial void OnbookNoChanged();
    partial void OnaccreditNoChanging(string value);
    partial void OnaccreditNoChanged();
    partial void OnserialNoChanging(string value);
    partial void OnserialNoChanged();
    partial void OnpermitNoChanging(string value);
    partial void OnpermitNoChanged();
    partial void OnmachineNoChanging(string value);
    partial void OnmachineNoChanged();
    partial void OnoperatedByChanging(string value);
    partial void OnoperatedByChanged();
    partial void OnsystemPathChanging(string value);
    partial void OnsystemPathChanged();
    partial void OncurrentUserChanging(System.Nullable<int> value);
    partial void OncurrentUserChanged();
    partial void OndefaultStationChanging(string value);
    partial void OndefaultStationChanged();
    partial void OnDefaultApproveByChanging(System.Nullable<int> value);
    partial void OnDefaultApproveByChanged();
    partial void OnAccountantChanging(System.Nullable<int> value);
    partial void OnAccountantChanged();
    partial void OnFinanceManagerChanging(System.Nullable<int> value);
    partial void OnFinanceManagerChanged();
    partial void OnOperationsManagerChanging(System.Nullable<int> value);
    partial void OnOperationsManagerChanged();
    partial void OnManagingDirectorChanging(System.Nullable<int> value);
    partial void OnManagingDirectorChanged();
    #endregion
		
		public mstCompany()
		{
			this._MstWarehouses = new EntitySet<MstWarehouse>(new Action<MstWarehouse>(this.attach_MstWarehouses), new Action<MstWarehouse>(this.detach_MstWarehouses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(255)")]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyAddress", DbType="NVarChar(255)")]
		public string companyAddress
		{
			get
			{
				return this._companyAddress;
			}
			set
			{
				if ((this._companyAddress != value))
				{
					this.OncompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._companyAddress = value;
					this.SendPropertyChanged("companyAddress");
					this.OncompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logoPicturePath", DbType="NVarChar(255)")]
		public string logoPicturePath
		{
			get
			{
				return this._logoPicturePath;
			}
			set
			{
				if ((this._logoPicturePath != value))
				{
					this.OnlogoPicturePathChanging(value);
					this.SendPropertyChanging();
					this._logoPicturePath = value;
					this.SendPropertyChanged("logoPicturePath");
					this.OnlogoPicturePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactNo", DbType="NVarChar(255)")]
		public string contactNo
		{
			get
			{
				return this._contactNo;
			}
			set
			{
				if ((this._contactNo != value))
				{
					this.OncontactNoChanging(value);
					this.SendPropertyChanging();
					this._contactNo = value;
					this.SendPropertyChanged("contactNo");
					this.OncontactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tin", DbType="NVarChar(50)")]
		public string tin
		{
			get
			{
				return this._tin;
			}
			set
			{
				if ((this._tin != value))
				{
					this.OntinChanging(value);
					this.SendPropertyChanging();
					this._tin = value;
					this.SendPropertyChanged("tin");
					this.OntinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookNo", DbType="NVarChar(255)")]
		public string bookNo
		{
			get
			{
				return this._bookNo;
			}
			set
			{
				if ((this._bookNo != value))
				{
					this.OnbookNoChanging(value);
					this.SendPropertyChanging();
					this._bookNo = value;
					this.SendPropertyChanged("bookNo");
					this.OnbookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accreditNo", DbType="NVarChar(50)")]
		public string accreditNo
		{
			get
			{
				return this._accreditNo;
			}
			set
			{
				if ((this._accreditNo != value))
				{
					this.OnaccreditNoChanging(value);
					this.SendPropertyChanging();
					this._accreditNo = value;
					this.SendPropertyChanged("accreditNo");
					this.OnaccreditNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNo", DbType="NVarChar(50)")]
		public string serialNo
		{
			get
			{
				return this._serialNo;
			}
			set
			{
				if ((this._serialNo != value))
				{
					this.OnserialNoChanging(value);
					this.SendPropertyChanging();
					this._serialNo = value;
					this.SendPropertyChanged("serialNo");
					this.OnserialNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permitNo", DbType="NVarChar(50)")]
		public string permitNo
		{
			get
			{
				return this._permitNo;
			}
			set
			{
				if ((this._permitNo != value))
				{
					this.OnpermitNoChanging(value);
					this.SendPropertyChanging();
					this._permitNo = value;
					this.SendPropertyChanged("permitNo");
					this.OnpermitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machineNo", DbType="NVarChar(50)")]
		public string machineNo
		{
			get
			{
				return this._machineNo;
			}
			set
			{
				if ((this._machineNo != value))
				{
					this.OnmachineNoChanging(value);
					this.SendPropertyChanging();
					this._machineNo = value;
					this.SendPropertyChanged("machineNo");
					this.OnmachineNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatedBy", DbType="NVarChar(50)")]
		public string operatedBy
		{
			get
			{
				return this._operatedBy;
			}
			set
			{
				if ((this._operatedBy != value))
				{
					this.OnoperatedByChanging(value);
					this.SendPropertyChanging();
					this._operatedBy = value;
					this.SendPropertyChanged("operatedBy");
					this.OnoperatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_systemPath", DbType="NVarChar(255)")]
		public string systemPath
		{
			get
			{
				return this._systemPath;
			}
			set
			{
				if ((this._systemPath != value))
				{
					this.OnsystemPathChanging(value);
					this.SendPropertyChanging();
					this._systemPath = value;
					this.SendPropertyChanged("systemPath");
					this.OnsystemPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentUser", DbType="Int")]
		public System.Nullable<int> currentUser
		{
			get
			{
				return this._currentUser;
			}
			set
			{
				if ((this._currentUser != value))
				{
					this.OncurrentUserChanging(value);
					this.SendPropertyChanging();
					this._currentUser = value;
					this.SendPropertyChanged("currentUser");
					this.OncurrentUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultStation", DbType="NVarChar(255)")]
		public string defaultStation
		{
			get
			{
				return this._defaultStation;
			}
			set
			{
				if ((this._defaultStation != value))
				{
					this.OndefaultStationChanging(value);
					this.SendPropertyChanging();
					this._defaultStation = value;
					this.SendPropertyChanged("defaultStation");
					this.OndefaultStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultApproveBy", DbType="Int")]
		public System.Nullable<int> DefaultApproveBy
		{
			get
			{
				return this._DefaultApproveBy;
			}
			set
			{
				if ((this._DefaultApproveBy != value))
				{
					this.OnDefaultApproveByChanging(value);
					this.SendPropertyChanging();
					this._DefaultApproveBy = value;
					this.SendPropertyChanged("DefaultApproveBy");
					this.OnDefaultApproveByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accountant", DbType="Int")]
		public System.Nullable<int> Accountant
		{
			get
			{
				return this._Accountant;
			}
			set
			{
				if ((this._Accountant != value))
				{
					this.OnAccountantChanging(value);
					this.SendPropertyChanging();
					this._Accountant = value;
					this.SendPropertyChanged("Accountant");
					this.OnAccountantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceManager", DbType="Int")]
		public System.Nullable<int> FinanceManager
		{
			get
			{
				return this._FinanceManager;
			}
			set
			{
				if ((this._FinanceManager != value))
				{
					this.OnFinanceManagerChanging(value);
					this.SendPropertyChanging();
					this._FinanceManager = value;
					this.SendPropertyChanged("FinanceManager");
					this.OnFinanceManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationsManager", DbType="Int")]
		public System.Nullable<int> OperationsManager
		{
			get
			{
				return this._OperationsManager;
			}
			set
			{
				if ((this._OperationsManager != value))
				{
					this.OnOperationsManagerChanging(value);
					this.SendPropertyChanging();
					this._OperationsManager = value;
					this.SendPropertyChanged("OperationsManager");
					this.OnOperationsManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagingDirector", DbType="Int")]
		public System.Nullable<int> ManagingDirector
		{
			get
			{
				return this._ManagingDirector;
			}
			set
			{
				if ((this._ManagingDirector != value))
				{
					this.OnManagingDirectorChanging(value);
					this.SendPropertyChanging();
					this._ManagingDirector = value;
					this.SendPropertyChanged("ManagingDirector");
					this.OnManagingDirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_MstWarehouse", Storage="_MstWarehouses", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstWarehouse> MstWarehouses
		{
			get
			{
				return this._MstWarehouses;
			}
			set
			{
				this._MstWarehouses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstWarehouses(MstWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = this;
		}
		
		private void detach_MstWarehouses(MstWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.mstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstWarehouse")]
	public partial class MstWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
		private string _Address;
		
		private string _Contact;
		
		private string _ContactNumber;
		
		private EntitySet<mstMaterialInventory> _mstMaterialInventories;
		
		private EntitySet<TrnPC> _TrnPCs;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks1;
		
		private EntitySet<TrnStorageReceiving> _TrnStorageReceivings;
		
		private EntitySet<TrnStorageReceiving> _TrnStorageReceivings1;
		
		private EntitySet<TrnStorageStockTransfer> _TrnStorageStockTransfers;
		
		private EntitySet<TrnStorageStockTransfer> _TrnStorageStockTransfers1;
		
		private EntitySet<trnWithdrawalOrder> _trnWithdrawalOrders;
		
		private EntitySet<trnWithdrawalOrderBatch> _trnWithdrawalOrderBatches;
		
		private EntityRef<mstCompany> _mstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    #endregion
		
		public MstWarehouse()
		{
			this._mstMaterialInventories = new EntitySet<mstMaterialInventory>(new Action<mstMaterialInventory>(this.attach_mstMaterialInventories), new Action<mstMaterialInventory>(this.detach_mstMaterialInventories));
			this._TrnPCs = new EntitySet<TrnPC>(new Action<TrnPC>(this.attach_TrnPCs), new Action<TrnPC>(this.detach_TrnPCs));
			this._TrnStoragePicks = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks), new Action<TrnStoragePick>(this.detach_TrnStoragePicks));
			this._TrnStoragePicks1 = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks1), new Action<TrnStoragePick>(this.detach_TrnStoragePicks1));
			this._TrnStorageReceivings = new EntitySet<TrnStorageReceiving>(new Action<TrnStorageReceiving>(this.attach_TrnStorageReceivings), new Action<TrnStorageReceiving>(this.detach_TrnStorageReceivings));
			this._TrnStorageReceivings1 = new EntitySet<TrnStorageReceiving>(new Action<TrnStorageReceiving>(this.attach_TrnStorageReceivings1), new Action<TrnStorageReceiving>(this.detach_TrnStorageReceivings1));
			this._TrnStorageStockTransfers = new EntitySet<TrnStorageStockTransfer>(new Action<TrnStorageStockTransfer>(this.attach_TrnStorageStockTransfers), new Action<TrnStorageStockTransfer>(this.detach_TrnStorageStockTransfers));
			this._TrnStorageStockTransfers1 = new EntitySet<TrnStorageStockTransfer>(new Action<TrnStorageStockTransfer>(this.attach_TrnStorageStockTransfers1), new Action<TrnStorageStockTransfer>(this.detach_TrnStorageStockTransfers1));
			this._trnWithdrawalOrders = new EntitySet<trnWithdrawalOrder>(new Action<trnWithdrawalOrder>(this.attach_trnWithdrawalOrders), new Action<trnWithdrawalOrder>(this.detach_trnWithdrawalOrders));
			this._trnWithdrawalOrderBatches = new EntitySet<trnWithdrawalOrderBatch>(new Action<trnWithdrawalOrderBatch>(this.attach_trnWithdrawalOrderBatches), new Action<trnWithdrawalOrderBatch>(this.detach_trnWithdrawalOrderBatches));
			this._mstCompany = default(EntityRef<mstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._mstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(50)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_mstMaterialInventory", Storage="_mstMaterialInventories", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<mstMaterialInventory> mstMaterialInventories
		{
			get
			{
				return this._mstMaterialInventories;
			}
			set
			{
				this._mstMaterialInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnPC", Storage="_TrnPCs", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<TrnPC> TrnPCs
		{
			get
			{
				return this._TrnPCs;
			}
			set
			{
				this._TrnPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStoragePick", Storage="_TrnStoragePicks", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<TrnStoragePick> TrnStoragePicks
		{
			get
			{
				return this._TrnStoragePicks;
			}
			set
			{
				this._TrnStoragePicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStoragePick1", Storage="_TrnStoragePicks1", ThisKey="Id", OtherKey="WOFromWarehouseId")]
		public EntitySet<TrnStoragePick> TrnStoragePicks1
		{
			get
			{
				return this._TrnStoragePicks1;
			}
			set
			{
				this._TrnStoragePicks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageReceiving", Storage="_TrnStorageReceivings", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<TrnStorageReceiving> TrnStorageReceivings
		{
			get
			{
				return this._TrnStorageReceivings;
			}
			set
			{
				this._TrnStorageReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageReceiving1", Storage="_TrnStorageReceivings1", ThisKey="Id", OtherKey="PickFromWarehouseId")]
		public EntitySet<TrnStorageReceiving> TrnStorageReceivings1
		{
			get
			{
				return this._TrnStorageReceivings1;
			}
			set
			{
				this._TrnStorageReceivings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageStockTransfer", Storage="_TrnStorageStockTransfers", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<TrnStorageStockTransfer> TrnStorageStockTransfers
		{
			get
			{
				return this._TrnStorageStockTransfers;
			}
			set
			{
				this._TrnStorageStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageStockTransfer1", Storage="_TrnStorageStockTransfers1", ThisKey="Id", OtherKey="ToWarehouseId")]
		public EntitySet<TrnStorageStockTransfer> TrnStorageStockTransfers1
		{
			get
			{
				return this._TrnStorageStockTransfers1;
			}
			set
			{
				this._TrnStorageStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_trnWithdrawalOrder", Storage="_trnWithdrawalOrders", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<trnWithdrawalOrder> trnWithdrawalOrders
		{
			get
			{
				return this._trnWithdrawalOrders;
			}
			set
			{
				this._trnWithdrawalOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_trnWithdrawalOrderBatch", Storage="_trnWithdrawalOrderBatches", ThisKey="Id", OtherKey="WarehouseId")]
		public EntitySet<trnWithdrawalOrderBatch> trnWithdrawalOrderBatches
		{
			get
			{
				return this._trnWithdrawalOrderBatches;
			}
			set
			{
				this._trnWithdrawalOrderBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCompany_MstWarehouse", Storage="_mstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public mstCompany mstCompany
		{
			get
			{
				return this._mstCompany.Entity;
			}
			set
			{
				mstCompany previousValue = this._mstCompany.Entity;
				if (((previousValue != value) 
							|| (this._mstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCompany.Entity = null;
						previousValue.MstWarehouses.Remove(this);
					}
					this._mstCompany.Entity = value;
					if ((value != null))
					{
						value.MstWarehouses.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("mstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_TrnPCs(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_TrnPCs(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_TrnStoragePicks1(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = this;
		}
		
		private void detach_TrnStoragePicks1(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = null;
		}
		
		private void attach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_TrnStorageReceivings1(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = this;
		}
		
		private void detach_TrnStorageReceivings1(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = null;
		}
		
		private void attach_TrnStorageStockTransfers(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_TrnStorageStockTransfers(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_TrnStorageStockTransfers1(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = this;
		}
		
		private void detach_TrnStorageStockTransfers1(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse1 = null;
		}
		
		private void attach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
		
		private void attach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = this;
		}
		
		private void detach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.MstWarehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysUser")]
	public partial class sysUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _FullName;
		
		private string _password;
		
		private string _UserType;
		
		private string _email;
		
		private string _telephoneNumber;
		
		private System.Nullable<short> _CanOverride;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntitySet<TrnPC> _TrnPCs;
		
		private EntitySet<TrnPC> _TrnPCs1;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks1;
		
		private EntitySet<TrnStorageReceiving> _TrnStorageReceivings;
		
		private EntitySet<TrnStorageReceiving> _TrnStorageReceivings1;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets1;
		
		private EntitySet<TrnStorageStockTransfer> _TrnStorageStockTransfers;
		
		private EntitySet<TrnStorageStockTransfer> _TrnStorageStockTransfers1;
		
		private EntitySet<trnWithdrawalOrder> _trnWithdrawalOrders;
		
		private EntitySet<trnWithdrawalOrder> _trnWithdrawalOrders1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelephoneNumberChanging(string value);
    partial void OntelephoneNumberChanged();
    partial void OnCanOverrideChanging(System.Nullable<short> value);
    partial void OnCanOverrideChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public sysUser()
		{
			this._TrnPCs = new EntitySet<TrnPC>(new Action<TrnPC>(this.attach_TrnPCs), new Action<TrnPC>(this.detach_TrnPCs));
			this._TrnPCs1 = new EntitySet<TrnPC>(new Action<TrnPC>(this.attach_TrnPCs1), new Action<TrnPC>(this.detach_TrnPCs1));
			this._TrnStoragePicks = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks), new Action<TrnStoragePick>(this.detach_TrnStoragePicks));
			this._TrnStoragePicks1 = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks1), new Action<TrnStoragePick>(this.detach_TrnStoragePicks1));
			this._TrnStorageReceivings = new EntitySet<TrnStorageReceiving>(new Action<TrnStorageReceiving>(this.attach_TrnStorageReceivings), new Action<TrnStorageReceiving>(this.detach_TrnStorageReceivings));
			this._TrnStorageReceivings1 = new EntitySet<TrnStorageReceiving>(new Action<TrnStorageReceiving>(this.attach_TrnStorageReceivings1), new Action<TrnStorageReceiving>(this.detach_TrnStorageReceivings1));
			this._TrnStorageReceivingPallets = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets));
			this._TrnStorageReceivingPallets1 = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets1), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets1));
			this._TrnStorageStockTransfers = new EntitySet<TrnStorageStockTransfer>(new Action<TrnStorageStockTransfer>(this.attach_TrnStorageStockTransfers), new Action<TrnStorageStockTransfer>(this.detach_TrnStorageStockTransfers));
			this._TrnStorageStockTransfers1 = new EntitySet<TrnStorageStockTransfer>(new Action<TrnStorageStockTransfer>(this.attach_TrnStorageStockTransfers1), new Action<TrnStorageStockTransfer>(this.detach_TrnStorageStockTransfers1));
			this._trnWithdrawalOrders = new EntitySet<trnWithdrawalOrder>(new Action<trnWithdrawalOrder>(this.attach_trnWithdrawalOrders), new Action<trnWithdrawalOrder>(this.detach_trnWithdrawalOrders));
			this._trnWithdrawalOrders1 = new EntitySet<trnWithdrawalOrder>(new Action<trnWithdrawalOrder>(this.attach_trnWithdrawalOrders1), new Action<trnWithdrawalOrder>(this.detach_trnWithdrawalOrders1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(MAX)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(255)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephoneNumber", DbType="NVarChar(100)")]
		public string telephoneNumber
		{
			get
			{
				return this._telephoneNumber;
			}
			set
			{
				if ((this._telephoneNumber != value))
				{
					this.OntelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._telephoneNumber = value;
					this.SendPropertyChanged("telephoneNumber");
					this.OntelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOverride", DbType="SmallInt")]
		public System.Nullable<short> CanOverride
		{
			get
			{
				return this._CanOverride;
			}
			set
			{
				if ((this._CanOverride != value))
				{
					this.OnCanOverrideChanging(value);
					this.SendPropertyChanging();
					this._CanOverride = value;
					this.SendPropertyChanged("CanOverride");
					this.OnCanOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnPC", Storage="_TrnPCs", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnPC> TrnPCs
		{
			get
			{
				return this._TrnPCs;
			}
			set
			{
				this._TrnPCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnPC1", Storage="_TrnPCs1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnPC> TrnPCs1
		{
			get
			{
				return this._TrnPCs1;
			}
			set
			{
				this._TrnPCs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStoragePick", Storage="_TrnStoragePicks", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStoragePick> TrnStoragePicks
		{
			get
			{
				return this._TrnStoragePicks;
			}
			set
			{
				this._TrnStoragePicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStoragePick1", Storage="_TrnStoragePicks1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStoragePick> TrnStoragePicks1
		{
			get
			{
				return this._TrnStoragePicks1;
			}
			set
			{
				this._TrnStoragePicks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceiving", Storage="_TrnStorageReceivings", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStorageReceiving> TrnStorageReceivings
		{
			get
			{
				return this._TrnStorageReceivings;
			}
			set
			{
				this._TrnStorageReceivings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceiving1", Storage="_TrnStorageReceivings1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStorageReceiving> TrnStorageReceivings1
		{
			get
			{
				return this._TrnStorageReceivings1;
			}
			set
			{
				this._TrnStorageReceivings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceivingPallet", Storage="_TrnStorageReceivingPallets", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this._TrnStorageReceivingPallets;
			}
			set
			{
				this._TrnStorageReceivingPallets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceivingPallet1", Storage="_TrnStorageReceivingPallets1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets1
		{
			get
			{
				return this._TrnStorageReceivingPallets1;
			}
			set
			{
				this._TrnStorageReceivingPallets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageStockTransfer", Storage="_TrnStorageStockTransfers", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnStorageStockTransfer> TrnStorageStockTransfers
		{
			get
			{
				return this._TrnStorageStockTransfers;
			}
			set
			{
				this._TrnStorageStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageStockTransfer1", Storage="_TrnStorageStockTransfers1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnStorageStockTransfer> TrnStorageStockTransfers1
		{
			get
			{
				return this._TrnStorageStockTransfers1;
			}
			set
			{
				this._TrnStorageStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_trnWithdrawalOrder", Storage="_trnWithdrawalOrders", ThisKey="Id", OtherKey="CreatedBy")]
		public EntitySet<trnWithdrawalOrder> trnWithdrawalOrders
		{
			get
			{
				return this._trnWithdrawalOrders;
			}
			set
			{
				this._trnWithdrawalOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_trnWithdrawalOrder1", Storage="_trnWithdrawalOrders1", ThisKey="Id", OtherKey="UpdatedBy")]
		public EntitySet<trnWithdrawalOrder> trnWithdrawalOrders1
		{
			get
			{
				return this._trnWithdrawalOrders1;
			}
			set
			{
				this._trnWithdrawalOrders1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPCs(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_TrnPCs(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_TrnPCs1(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_TrnPCs1(TrnPC entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
		
		private void attach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_TrnStoragePicks1(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_TrnStoragePicks1(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
		
		private void attach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_TrnStorageReceivings(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_TrnStorageReceivings1(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_TrnStorageReceivings1(TrnStorageReceiving entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
		
		private void attach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_TrnStorageReceivingPallets1(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_TrnStorageReceivingPallets1(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
		
		private void attach_TrnStorageStockTransfers(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_TrnStorageStockTransfers(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_TrnStorageStockTransfers1(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_TrnStorageStockTransfers1(TrnStorageStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
		
		private void attach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = this;
		}
		
		private void detach_trnWithdrawalOrders(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.sysUser = null;
		}
		
		private void attach_trnWithdrawalOrders1(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = this;
		}
		
		private void detach_trnWithdrawalOrders1(trnWithdrawalOrder entity)
		{
			this.SendPropertyChanging();
			entity.sysUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPC")]
	public partial class TrnPC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PickNumber;
		
		private int _WarehouseId;
		
		private System.DateTime _PCDate;
		
		private string _Particulars;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private short _IsLocked;
		
		private EntitySet<TrnPCDetail> _TrnPCDetails;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPickNumberChanging(string value);
    partial void OnPickNumberChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnPCDateChanging(System.DateTime value);
    partial void OnPCDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnPC()
		{
			this._TrnPCDetails = new EntitySet<TrnPCDetail>(new Action<TrnPCDetail>(this.attach_TrnPCDetails), new Action<TrnPCDetail>(this.detach_TrnPCDetails));
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PickNumber
		{
			get
			{
				return this._PickNumber;
			}
			set
			{
				if ((this._PickNumber != value))
				{
					this.OnPickNumberChanging(value);
					this.SendPropertyChanging();
					this._PickNumber = value;
					this.SendPropertyChanged("PickNumber");
					this.OnPickNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCDate", DbType="DateTime NOT NULL")]
		public System.DateTime PCDate
		{
			get
			{
				return this._PCDate;
			}
			set
			{
				if ((this._PCDate != value))
				{
					this.OnPCDateChanging(value);
					this.SendPropertyChanging();
					this._PCDate = value;
					this.SendPropertyChanged("PCDate");
					this.OnPCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPC_TrnPCDetail", Storage="_TrnPCDetails", ThisKey="Id", OtherKey="PCId")]
		public EntitySet<TrnPCDetail> TrnPCDetails
		{
			get
			{
				return this._TrnPCDetails;
			}
			set
			{
				this._TrnPCDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnPC", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.TrnPCs.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.TrnPCs.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnPC", Storage="_sysUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.TrnPCs.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.TrnPCs.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnPC1", Storage="_sysUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.TrnPCs1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPCs1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrnPC = this;
		}
		
		private void detach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrnPC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPCDetail")]
	public partial class TrnPCDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PCId;
		
		private int _StorageReceivingPalletId;
		
		private int _LocationId;
		
		private int _MaterialId;
		
		private decimal _Quantity;
		
		private int _UnitId;
		
		private decimal _Weight;
		
		private System.Nullable<decimal> _PQuantity;
		
		private System.Nullable<decimal> _PWeight;
		
		private System.Nullable<decimal> _Factor;
		
		private string _Barcode;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<TrnPC> _TrnPC;
		
		private EntityRef<TrnStorageReceivingPallet> _TrnStorageReceivingPallet;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPCIdChanging(int value);
    partial void OnPCIdChanged();
    partial void OnStorageReceivingPalletIdChanging(int value);
    partial void OnStorageReceivingPalletIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnPQuantityChanging(System.Nullable<decimal> value);
    partial void OnPQuantityChanged();
    partial void OnPWeightChanging(System.Nullable<decimal> value);
    partial void OnPWeightChanged();
    partial void OnFactorChanging(System.Nullable<decimal> value);
    partial void OnFactorChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public TrnPCDetail()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._TrnPC = default(EntityRef<TrnPC>);
			this._TrnStorageReceivingPallet = default(EntityRef<TrnStorageReceivingPallet>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCId", DbType="Int NOT NULL")]
		public int PCId
		{
			get
			{
				return this._PCId;
			}
			set
			{
				if ((this._PCId != value))
				{
					if (this._TrnPC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPCIdChanging(value);
					this.SendPropertyChanging();
					this._PCId = value;
					this.SendPropertyChanged("PCId");
					this.OnPCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingPalletId", DbType="Int NOT NULL")]
		public int StorageReceivingPalletId
		{
			get
			{
				return this._StorageReceivingPalletId;
			}
			set
			{
				if ((this._StorageReceivingPalletId != value))
				{
					if (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingPalletIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingPalletId = value;
					this.SendPropertyChanged("StorageReceivingPalletId");
					this.OnStorageReceivingPalletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PQuantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PQuantity
		{
			get
			{
				return this._PQuantity;
			}
			set
			{
				if ((this._PQuantity != value))
				{
					this.OnPQuantityChanging(value);
					this.SendPropertyChanging();
					this._PQuantity = value;
					this.SendPropertyChanged("PQuantity");
					this.OnPQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PWeight
		{
			get
			{
				return this._PWeight;
			}
			set
			{
				if ((this._PWeight != value))
				{
					this.OnPWeightChanging(value);
					this.SendPropertyChanging();
					this._PWeight = value;
					this.SendPropertyChanged("PWeight");
					this.OnPWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnPCDetail", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.TrnPCDetails.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.TrnPCDetails.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPC_TrnPCDetail", Storage="_TrnPC", ThisKey="PCId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPC TrnPC
		{
			get
			{
				return this._TrnPC.Entity;
			}
			set
			{
				TrnPC previousValue = this._TrnPC.Entity;
				if (((previousValue != value) 
							|| (this._TrnPC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPC.Entity = null;
						previousValue.TrnPCDetails.Remove(this);
					}
					this._TrnPC.Entity = value;
					if ((value != null))
					{
						value.TrnPCDetails.Add(this);
						this._PCId = value.Id;
					}
					else
					{
						this._PCId = default(int);
					}
					this.SendPropertyChanged("TrnPC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnPCDetail", Storage="_TrnStorageReceivingPallet", ThisKey="StorageReceivingPalletId", OtherKey="Id", IsForeignKey=true)]
		public TrnStorageReceivingPallet TrnStorageReceivingPallet
		{
			get
			{
				return this._TrnStorageReceivingPallet.Entity;
			}
			set
			{
				TrnStorageReceivingPallet previousValue = this._TrnStorageReceivingPallet.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceivingPallet.Entity = null;
						previousValue.TrnPCDetails.Remove(this);
					}
					this._TrnStorageReceivingPallet.Entity = value;
					if ((value != null))
					{
						value.TrnPCDetails.Add(this);
						this._StorageReceivingPalletId = value.Id;
					}
					else
					{
						this._StorageReceivingPalletId = default(int);
					}
					this.SendPropertyChanged("TrnStorageReceivingPallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnPCDetail", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.TrnPCDetails.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.TrnPCDetails.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStoragePick")]
	public partial class TrnStoragePick : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _WOFromWarehouseId;
		
		private System.Nullable<int> _WithdrawalOrderId;
		
		private string _PickNumber;
		
		private int _WarehouseId;
		
		private System.DateTime _PickDate;
		
		private int _CustomerId;
		
		private decimal _Quantity;
		
		private decimal _Weight;
		
		private string _Particulars;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private short _IsLocked;
		
		private System.Nullable<short> _IsReleased;
		
		private System.Nullable<int> _OldStoragePickId;
		
		private EntitySet<TrnStoragePickMaterial> _TrnStoragePickMaterials;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntityRef<mstCustomer> _mstCustomer;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<MstWarehouse> _MstWarehouse1;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
		private EntityRef<trnWithdrawalOrder> _trnWithdrawalOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWOFromWarehouseIdChanging(System.Nullable<int> value);
    partial void OnWOFromWarehouseIdChanged();
    partial void OnWithdrawalOrderIdChanging(System.Nullable<int> value);
    partial void OnWithdrawalOrderIdChanged();
    partial void OnPickNumberChanging(string value);
    partial void OnPickNumberChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnPickDateChanging(System.DateTime value);
    partial void OnPickDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    partial void OnIsReleasedChanging(System.Nullable<short> value);
    partial void OnIsReleasedChanged();
    partial void OnOldStoragePickIdChanging(System.Nullable<int> value);
    partial void OnOldStoragePickIdChanged();
    #endregion
		
		public TrnStoragePick()
		{
			this._TrnStoragePickMaterials = new EntitySet<TrnStoragePickMaterial>(new Action<TrnStoragePickMaterial>(this.attach_TrnStoragePickMaterials), new Action<TrnStoragePickMaterial>(this.detach_TrnStoragePickMaterials));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._mstCustomer = default(EntityRef<mstCustomer>);
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._MstWarehouse1 = default(EntityRef<MstWarehouse>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			this._trnWithdrawalOrder = default(EntityRef<trnWithdrawalOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOFromWarehouseId", DbType="Int")]
		public System.Nullable<int> WOFromWarehouseId
		{
			get
			{
				return this._WOFromWarehouseId;
			}
			set
			{
				if ((this._WOFromWarehouseId != value))
				{
					if (this._MstWarehouse1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWOFromWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WOFromWarehouseId = value;
					this.SendPropertyChanged("WOFromWarehouseId");
					this.OnWOFromWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalOrderId", DbType="Int")]
		public System.Nullable<int> WithdrawalOrderId
		{
			get
			{
				return this._WithdrawalOrderId;
			}
			set
			{
				if ((this._WithdrawalOrderId != value))
				{
					if (this._trnWithdrawalOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWithdrawalOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalOrderId = value;
					this.SendPropertyChanged("WithdrawalOrderId");
					this.OnWithdrawalOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PickNumber
		{
			get
			{
				return this._PickNumber;
			}
			set
			{
				if ((this._PickNumber != value))
				{
					this.OnPickNumberChanging(value);
					this.SendPropertyChanging();
					this._PickNumber = value;
					this.SendPropertyChanged("PickNumber");
					this.OnPickNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickDate", DbType="DateTime NOT NULL")]
		public System.DateTime PickDate
		{
			get
			{
				return this._PickDate;
			}
			set
			{
				if ((this._PickDate != value))
				{
					this.OnPickDateChanging(value);
					this.SendPropertyChanging();
					this._PickDate = value;
					this.SendPropertyChanged("PickDate");
					this.OnPickDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._mstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReleased", DbType="SmallInt")]
		public System.Nullable<short> IsReleased
		{
			get
			{
				return this._IsReleased;
			}
			set
			{
				if ((this._IsReleased != value))
				{
					this.OnIsReleasedChanging(value);
					this.SendPropertyChanging();
					this._IsReleased = value;
					this.SendPropertyChanged("IsReleased");
					this.OnIsReleasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStoragePickId", DbType="Int")]
		public System.Nullable<int> OldStoragePickId
		{
			get
			{
				return this._OldStoragePickId;
			}
			set
			{
				if ((this._OldStoragePickId != value))
				{
					this.OnOldStoragePickIdChanging(value);
					this.SendPropertyChanging();
					this._OldStoragePickId = value;
					this.SendPropertyChanged("OldStoragePickId");
					this.OnOldStoragePickIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStoragePick_TrnStoragePickMaterial", Storage="_TrnStoragePickMaterials", ThisKey="Id", OtherKey="StoragePickId")]
		public EntitySet<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this._TrnStoragePickMaterials;
			}
			set
			{
				this._TrnStoragePickMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStoragePick_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="StoragePickId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStoragePick", Storage="_mstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public mstCustomer mstCustomer
		{
			get
			{
				return this._mstCustomer.Entity;
			}
			set
			{
				mstCustomer previousValue = this._mstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._mstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCustomer.Entity = null;
						previousValue.TrnStoragePicks.Remove(this);
					}
					this._mstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("mstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStoragePick", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.TrnStoragePicks.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStoragePick1", Storage="_MstWarehouse1", ThisKey="WOFromWarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse1
		{
			get
			{
				return this._MstWarehouse1.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse1.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse1.Entity = null;
						previousValue.TrnStoragePicks1.Remove(this);
					}
					this._MstWarehouse1.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks1.Add(this);
						this._WOFromWarehouseId = value.Id;
					}
					else
					{
						this._WOFromWarehouseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstWarehouse1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStoragePick", Storage="_sysUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.TrnStoragePicks.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStoragePick1", Storage="_sysUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.TrnStoragePicks1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_TrnStoragePick", Storage="_trnWithdrawalOrder", ThisKey="WithdrawalOrderId", OtherKey="Id", IsForeignKey=true)]
		public trnWithdrawalOrder trnWithdrawalOrder
		{
			get
			{
				return this._trnWithdrawalOrder.Entity;
			}
			set
			{
				trnWithdrawalOrder previousValue = this._trnWithdrawalOrder.Entity;
				if (((previousValue != value) 
							|| (this._trnWithdrawalOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnWithdrawalOrder.Entity = null;
						previousValue.TrnStoragePicks.Remove(this);
					}
					this._trnWithdrawalOrder.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePicks.Add(this);
						this._WithdrawalOrderId = value.Id;
					}
					else
					{
						this._WithdrawalOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("trnWithdrawalOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStoragePick = this;
		}
		
		private void detach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStoragePick = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStoragePick = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStoragePick = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStoragePickMaterial")]
	public partial class TrnStoragePickMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StoragePickId;
		
		private int _StorageReceivingPalletId;
		
		private int _LocationId;
		
		private int _MaterialId;
		
		private decimal _Quantity;
		
		private int _UnitId;
		
		private decimal _Weight;
		
		private System.Nullable<decimal> _Factor;
		
		private string _Barcode;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<TrnStoragePick> _TrnStoragePick;
		
		private EntityRef<TrnStorageReceivingPallet> _TrnStorageReceivingPallet;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStoragePickIdChanging(int value);
    partial void OnStoragePickIdChanged();
    partial void OnStorageReceivingPalletIdChanging(int value);
    partial void OnStorageReceivingPalletIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnFactorChanging(System.Nullable<decimal> value);
    partial void OnFactorChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public TrnStoragePickMaterial()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._TrnStoragePick = default(EntityRef<TrnStoragePick>);
			this._TrnStorageReceivingPallet = default(EntityRef<TrnStorageReceivingPallet>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePickId", DbType="Int NOT NULL")]
		public int StoragePickId
		{
			get
			{
				return this._StoragePickId;
			}
			set
			{
				if ((this._StoragePickId != value))
				{
					if (this._TrnStoragePick.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoragePickIdChanging(value);
					this.SendPropertyChanging();
					this._StoragePickId = value;
					this.SendPropertyChanged("StoragePickId");
					this.OnStoragePickIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingPalletId", DbType="Int NOT NULL")]
		public int StorageReceivingPalletId
		{
			get
			{
				return this._StorageReceivingPalletId;
			}
			set
			{
				if ((this._StorageReceivingPalletId != value))
				{
					if (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingPalletIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingPalletId = value;
					this.SendPropertyChanged("StorageReceivingPalletId");
					this.OnStorageReceivingPalletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factor", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Factor
		{
			get
			{
				return this._Factor;
			}
			set
			{
				if ((this._Factor != value))
				{
					this.OnFactorChanging(value);
					this.SendPropertyChanging();
					this._Factor = value;
					this.SendPropertyChanged("Factor");
					this.OnFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStoragePickMaterial", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.TrnStoragePickMaterials.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePickMaterials.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStoragePickMaterial", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.TrnStoragePickMaterials.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePickMaterials.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStoragePick_TrnStoragePickMaterial", Storage="_TrnStoragePick", ThisKey="StoragePickId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStoragePick TrnStoragePick
		{
			get
			{
				return this._TrnStoragePick.Entity;
			}
			set
			{
				TrnStoragePick previousValue = this._TrnStoragePick.Entity;
				if (((previousValue != value) 
							|| (this._TrnStoragePick.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStoragePick.Entity = null;
						previousValue.TrnStoragePickMaterials.Remove(this);
					}
					this._TrnStoragePick.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePickMaterials.Add(this);
						this._StoragePickId = value.Id;
					}
					else
					{
						this._StoragePickId = default(int);
					}
					this.SendPropertyChanged("TrnStoragePick");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStoragePickMaterial", Storage="_TrnStorageReceivingPallet", ThisKey="StorageReceivingPalletId", OtherKey="Id", IsForeignKey=true)]
		public TrnStorageReceivingPallet TrnStorageReceivingPallet
		{
			get
			{
				return this._TrnStorageReceivingPallet.Entity;
			}
			set
			{
				TrnStorageReceivingPallet previousValue = this._TrnStorageReceivingPallet.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceivingPallet.Entity = null;
						previousValue.TrnStoragePickMaterials.Remove(this);
					}
					this._TrnStorageReceivingPallet.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePickMaterials.Add(this);
						this._StorageReceivingPalletId = value.Id;
					}
					else
					{
						this._StorageReceivingPalletId = default(int);
					}
					this.SendPropertyChanged("TrnStorageReceivingPallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStoragePickMaterial", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.TrnStoragePickMaterials.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.TrnStoragePickMaterials.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStorageInventory")]
	public partial class TrnStorageInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WarehouseId;
		
		private System.DateTime _InventoryDate;
		
		private System.Nullable<int> _StorageReceivingId;
		
		private System.Nullable<int> _StorageReceivingPalletId;
		
		private System.Nullable<int> _StoragePickId;
		
		private int _CustomerId;
		
		private string _Barcode;
		
		private int _MaterialId;
		
		private int _LocationId;
		
		private decimal _InQuantity;
		
		private decimal _OutQuantity;
		
		private int _UnitId;
		
		private decimal _Weight;
		
		private EntityRef<mstCustomer> _mstCustomer;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<TrnStoragePick> _TrnStoragePick;
		
		private EntityRef<TrnStorageReceiving> _TrnStorageReceiving;
		
		private EntityRef<TrnStorageReceivingPallet> _TrnStorageReceivingPallet;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnInventoryDateChanging(System.DateTime value);
    partial void OnInventoryDateChanged();
    partial void OnStorageReceivingIdChanging(System.Nullable<int> value);
    partial void OnStorageReceivingIdChanged();
    partial void OnStorageReceivingPalletIdChanging(System.Nullable<int> value);
    partial void OnStorageReceivingPalletIdChanged();
    partial void OnStoragePickIdChanging(System.Nullable<int> value);
    partial void OnStoragePickIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnInQuantityChanging(decimal value);
    partial void OnInQuantityChanged();
    partial void OnOutQuantityChanging(decimal value);
    partial void OnOutQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    #endregion
		
		public TrnStorageInventory()
		{
			this._mstCustomer = default(EntityRef<mstCustomer>);
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._TrnStoragePick = default(EntityRef<TrnStoragePick>);
			this._TrnStorageReceiving = default(EntityRef<TrnStorageReceiving>);
			this._TrnStorageReceivingPallet = default(EntityRef<TrnStorageReceivingPallet>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryDate
		{
			get
			{
				return this._InventoryDate;
			}
			set
			{
				if ((this._InventoryDate != value))
				{
					this.OnInventoryDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryDate = value;
					this.SendPropertyChanged("InventoryDate");
					this.OnInventoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingId", DbType="Int")]
		public System.Nullable<int> StorageReceivingId
		{
			get
			{
				return this._StorageReceivingId;
			}
			set
			{
				if ((this._StorageReceivingId != value))
				{
					if (this._TrnStorageReceiving.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingId = value;
					this.SendPropertyChanged("StorageReceivingId");
					this.OnStorageReceivingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingPalletId", DbType="Int")]
		public System.Nullable<int> StorageReceivingPalletId
		{
			get
			{
				return this._StorageReceivingPalletId;
			}
			set
			{
				if ((this._StorageReceivingPalletId != value))
				{
					if (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingPalletIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingPalletId = value;
					this.SendPropertyChanged("StorageReceivingPalletId");
					this.OnStorageReceivingPalletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePickId", DbType="Int")]
		public System.Nullable<int> StoragePickId
		{
			get
			{
				return this._StoragePickId;
			}
			set
			{
				if ((this._StoragePickId != value))
				{
					if (this._TrnStoragePick.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoragePickIdChanging(value);
					this.SendPropertyChanging();
					this._StoragePickId = value;
					this.SendPropertyChanged("StoragePickId");
					this.OnStoragePickIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._mstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InQuantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal InQuantity
		{
			get
			{
				return this._InQuantity;
			}
			set
			{
				if ((this._InQuantity != value))
				{
					this.OnInQuantityChanging(value);
					this.SendPropertyChanging();
					this._InQuantity = value;
					this.SendPropertyChanged("InQuantity");
					this.OnInQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutQuantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal OutQuantity
		{
			get
			{
				return this._OutQuantity;
			}
			set
			{
				if ((this._OutQuantity != value))
				{
					this.OnOutQuantityChanging(value);
					this.SendPropertyChanging();
					this._OutQuantity = value;
					this.SendPropertyChanged("OutQuantity");
					this.OnOutQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStorageInventory", Storage="_mstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public mstCustomer mstCustomer
		{
			get
			{
				return this._mstCustomer.Entity;
			}
			set
			{
				mstCustomer previousValue = this._mstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._mstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCustomer.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._mstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("mstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageInventory", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageInventory", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStoragePick_TrnStorageInventory", Storage="_TrnStoragePick", ThisKey="StoragePickId", OtherKey="Id", IsForeignKey=true)]
		public TrnStoragePick TrnStoragePick
		{
			get
			{
				return this._TrnStoragePick.Entity;
			}
			set
			{
				TrnStoragePick previousValue = this._TrnStoragePick.Entity;
				if (((previousValue != value) 
							|| (this._TrnStoragePick.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStoragePick.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._TrnStoragePick.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._StoragePickId = value.Id;
					}
					else
					{
						this._StoragePickId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStoragePick");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceiving_TrnStorageInventory", Storage="_TrnStorageReceiving", ThisKey="StorageReceivingId", OtherKey="Id", IsForeignKey=true)]
		public TrnStorageReceiving TrnStorageReceiving
		{
			get
			{
				return this._TrnStorageReceiving.Entity;
			}
			set
			{
				TrnStorageReceiving previousValue = this._TrnStorageReceiving.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceiving.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceiving.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._TrnStorageReceiving.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._StorageReceivingId = value.Id;
					}
					else
					{
						this._StorageReceivingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStorageReceiving");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStorageInventory", Storage="_TrnStorageReceivingPallet", ThisKey="StorageReceivingPalletId", OtherKey="Id", IsForeignKey=true)]
		public TrnStorageReceivingPallet TrnStorageReceivingPallet
		{
			get
			{
				return this._TrnStorageReceivingPallet.Entity;
			}
			set
			{
				TrnStorageReceivingPallet previousValue = this._TrnStorageReceivingPallet.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceivingPallet.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._TrnStorageReceivingPallet.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._StorageReceivingPalletId = value.Id;
					}
					else
					{
						this._StorageReceivingPalletId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStorageReceivingPallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageInventory", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.TrnStorageInventories.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.TrnStorageInventories.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStorageReceiving")]
	public partial class TrnStorageReceiving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ReceivingOrderId;
		
		private string _ReceivingNumber;
		
		private int _WarehouseId;
		
		private System.Nullable<int> _PickFromWarehouseId;
		
		private System.Nullable<int> _StoragePickId;
		
		private System.DateTime _ReceivingDate;
		
		private System.DateTime _ReceivingTime;
		
		private string _TruckPlateNumber;
		
		private System.Nullable<System.DateTime> _ManufactureDateHeader;
		
		private System.Nullable<int> _NoDaysToPrompAlertHeader;
		
		private decimal _Quantity;
		
		private decimal _Weight;
		
		private string _ContainerNumber;
		
		private string _Remarks;
		
		private int _CustomerId;
		
		private short _IsFreezing;
		
		private string _ReceivedBy;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private short _IsLocked;
		
		private System.Nullable<int> _OldStorageReceivingId;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets;
		
		private EntityRef<mstCustomer> _mstCustomer;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
		private EntityRef<MstWarehouse> _MstWarehouse1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReceivingOrderIdChanging(System.Nullable<int> value);
    partial void OnReceivingOrderIdChanged();
    partial void OnReceivingNumberChanging(string value);
    partial void OnReceivingNumberChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnPickFromWarehouseIdChanging(System.Nullable<int> value);
    partial void OnPickFromWarehouseIdChanged();
    partial void OnStoragePickIdChanging(System.Nullable<int> value);
    partial void OnStoragePickIdChanged();
    partial void OnReceivingDateChanging(System.DateTime value);
    partial void OnReceivingDateChanged();
    partial void OnReceivingTimeChanging(System.DateTime value);
    partial void OnReceivingTimeChanged();
    partial void OnTruckPlateNumberChanging(string value);
    partial void OnTruckPlateNumberChanged();
    partial void OnManufactureDateHeaderChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateHeaderChanged();
    partial void OnNoDaysToPrompAlertHeaderChanging(System.Nullable<int> value);
    partial void OnNoDaysToPrompAlertHeaderChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnContainerNumberChanging(string value);
    partial void OnContainerNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnIsFreezingChanging(short value);
    partial void OnIsFreezingChanged();
    partial void OnReceivedByChanging(string value);
    partial void OnReceivedByChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    partial void OnOldStorageReceivingIdChanging(System.Nullable<int> value);
    partial void OnOldStorageReceivingIdChanged();
    #endregion
		
		public TrnStorageReceiving()
		{
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageReceivingPallets = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets));
			this._mstCustomer = default(EntityRef<mstCustomer>);
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			this._MstWarehouse1 = default(EntityRef<MstWarehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingOrderId", DbType="Int")]
		public System.Nullable<int> ReceivingOrderId
		{
			get
			{
				return this._ReceivingOrderId;
			}
			set
			{
				if ((this._ReceivingOrderId != value))
				{
					this.OnReceivingOrderIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivingOrderId = value;
					this.SendPropertyChanged("ReceivingOrderId");
					this.OnReceivingOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivingNumber
		{
			get
			{
				return this._ReceivingNumber;
			}
			set
			{
				if ((this._ReceivingNumber != value))
				{
					this.OnReceivingNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceivingNumber = value;
					this.SendPropertyChanged("ReceivingNumber");
					this.OnReceivingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickFromWarehouseId", DbType="Int")]
		public System.Nullable<int> PickFromWarehouseId
		{
			get
			{
				return this._PickFromWarehouseId;
			}
			set
			{
				if ((this._PickFromWarehouseId != value))
				{
					if (this._MstWarehouse1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPickFromWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._PickFromWarehouseId = value;
					this.SendPropertyChanged("PickFromWarehouseId");
					this.OnPickFromWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoragePickId", DbType="Int")]
		public System.Nullable<int> StoragePickId
		{
			get
			{
				return this._StoragePickId;
			}
			set
			{
				if ((this._StoragePickId != value))
				{
					this.OnStoragePickIdChanging(value);
					this.SendPropertyChanging();
					this._StoragePickId = value;
					this.SendPropertyChanged("StoragePickId");
					this.OnStoragePickIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceivingDate
		{
			get
			{
				return this._ReceivingDate;
			}
			set
			{
				if ((this._ReceivingDate != value))
				{
					this.OnReceivingDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivingDate = value;
					this.SendPropertyChanged("ReceivingDate");
					this.OnReceivingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingTime", DbType="DateTime NOT NULL")]
		public System.DateTime ReceivingTime
		{
			get
			{
				return this._ReceivingTime;
			}
			set
			{
				if ((this._ReceivingTime != value))
				{
					this.OnReceivingTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceivingTime = value;
					this.SendPropertyChanged("ReceivingTime");
					this.OnReceivingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TruckPlateNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TruckPlateNumber
		{
			get
			{
				return this._TruckPlateNumber;
			}
			set
			{
				if ((this._TruckPlateNumber != value))
				{
					this.OnTruckPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._TruckPlateNumber = value;
					this.SendPropertyChanged("TruckPlateNumber");
					this.OnTruckPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDateHeader", DbType="DateTime")]
		public System.Nullable<System.DateTime> ManufactureDateHeader
		{
			get
			{
				return this._ManufactureDateHeader;
			}
			set
			{
				if ((this._ManufactureDateHeader != value))
				{
					this.OnManufactureDateHeaderChanging(value);
					this.SendPropertyChanging();
					this._ManufactureDateHeader = value;
					this.SendPropertyChanged("ManufactureDateHeader");
					this.OnManufactureDateHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDaysToPrompAlertHeader", DbType="Int")]
		public System.Nullable<int> NoDaysToPrompAlertHeader
		{
			get
			{
				return this._NoDaysToPrompAlertHeader;
			}
			set
			{
				if ((this._NoDaysToPrompAlertHeader != value))
				{
					this.OnNoDaysToPrompAlertHeaderChanging(value);
					this.SendPropertyChanging();
					this._NoDaysToPrompAlertHeader = value;
					this.SendPropertyChanged("NoDaysToPrompAlertHeader");
					this.OnNoDaysToPrompAlertHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainerNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContainerNumber
		{
			get
			{
				return this._ContainerNumber;
			}
			set
			{
				if ((this._ContainerNumber != value))
				{
					this.OnContainerNumberChanging(value);
					this.SendPropertyChanging();
					this._ContainerNumber = value;
					this.SendPropertyChanged("ContainerNumber");
					this.OnContainerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._mstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFreezing", DbType="SmallInt NOT NULL")]
		public short IsFreezing
		{
			get
			{
				return this._IsFreezing;
			}
			set
			{
				if ((this._IsFreezing != value))
				{
					this.OnIsFreezingChanging(value);
					this.SendPropertyChanging();
					this._IsFreezing = value;
					this.SendPropertyChanged("IsFreezing");
					this.OnIsFreezingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceivedBy
		{
			get
			{
				return this._ReceivedBy;
			}
			set
			{
				if ((this._ReceivedBy != value))
				{
					this.OnReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ReceivedBy = value;
					this.SendPropertyChanged("ReceivedBy");
					this.OnReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStorageReceivingId", DbType="Int")]
		public System.Nullable<int> OldStorageReceivingId
		{
			get
			{
				return this._OldStorageReceivingId;
			}
			set
			{
				if ((this._OldStorageReceivingId != value))
				{
					this.OnOldStorageReceivingIdChanging(value);
					this.SendPropertyChanging();
					this._OldStorageReceivingId = value;
					this.SendPropertyChanged("OldStorageReceivingId");
					this.OnOldStorageReceivingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceiving_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="StorageReceivingId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceiving_TrnStorageReceivingPallet", Storage="_TrnStorageReceivingPallets", ThisKey="Id", OtherKey="StorageReceivingId")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this._TrnStorageReceivingPallets;
			}
			set
			{
				this._TrnStorageReceivingPallets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_TrnStorageReceiving", Storage="_mstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public mstCustomer mstCustomer
		{
			get
			{
				return this._mstCustomer.Entity;
			}
			set
			{
				mstCustomer previousValue = this._mstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._mstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCustomer.Entity = null;
						previousValue.TrnStorageReceivings.Remove(this);
					}
					this._mstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivings.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("mstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageReceiving", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.TrnStorageReceivings.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivings.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceiving", Storage="_sysUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.TrnStorageReceivings.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivings.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceiving1", Storage="_sysUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.TrnStorageReceivings1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivings1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageReceiving1", Storage="_MstWarehouse1", ThisKey="PickFromWarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse1
		{
			get
			{
				return this._MstWarehouse1.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse1.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse1.Entity = null;
						previousValue.TrnStorageReceivings1.Remove(this);
					}
					this._MstWarehouse1.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivings1.Add(this);
						this._PickFromWarehouseId = value.Id;
					}
					else
					{
						this._PickFromWarehouseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstWarehouse1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceiving = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceiving = null;
		}
		
		private void attach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceiving = this;
		}
		
		private void detach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceiving = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStorageReceivingPallet")]
	public partial class TrnStorageReceivingPallet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StorageReceivingId;
		
		private System.Nullable<int> _ReceivingOrderId;
		
		private string _PalletNumber;
		
		private string _ManualPalletNumber;
		
		private System.Nullable<int> _LocationId;
		
		private string _Weighted;
		
		private string _Remarks;
		
		private string _BoxNumber;
		
		private int _MaterialId;
		
		private string _VendorBatchNumber;
		
		private string _BatchCode;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<int> _NoDaysToPrompAlert;
		
		private System.Nullable<System.DateTime> _ManufactureDate;
		
		private decimal _Quantity;
		
		private int _UnitId;
		
		private System.Nullable<short> _DisplayUnitCode;
		
		private decimal _WeightPerQuantity;
		
		private decimal _GrossWeight;
		
		private System.Nullable<decimal> _PackageTareWeight;
		
		private System.Nullable<decimal> _PalletTareWeight;
		
		private decimal _NetWeight;
		
		private System.Nullable<int> _ArrivalSequenceNo;
		
		private string _BarCode;
		
		private string _SourceBarcode;
		
		private System.Nullable<short> _LastMaterial;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private short _IsLocked;
		
		private EntitySet<TrnPCDetail> _TrnPCDetails;
		
		private EntitySet<TrnStoragePickMaterial> _TrnStoragePickMaterials;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageStockTransferMaterial> _TrnStorageStockTransferMaterials;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
		private EntityRef<TrnStorageReceiving> _TrnStorageReceiving;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStorageReceivingIdChanging(int value);
    partial void OnStorageReceivingIdChanged();
    partial void OnReceivingOrderIdChanging(System.Nullable<int> value);
    partial void OnReceivingOrderIdChanged();
    partial void OnPalletNumberChanging(string value);
    partial void OnPalletNumberChanged();
    partial void OnManualPalletNumberChanging(string value);
    partial void OnManualPalletNumberChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnWeightedChanging(string value);
    partial void OnWeightedChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnBoxNumberChanging(string value);
    partial void OnBoxNumberChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnVendorBatchNumberChanging(string value);
    partial void OnVendorBatchNumberChanged();
    partial void OnBatchCodeChanging(string value);
    partial void OnBatchCodeChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnNoDaysToPrompAlertChanging(System.Nullable<int> value);
    partial void OnNoDaysToPrompAlertChanged();
    partial void OnManufactureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnDisplayUnitCodeChanging(System.Nullable<short> value);
    partial void OnDisplayUnitCodeChanged();
    partial void OnWeightPerQuantityChanging(decimal value);
    partial void OnWeightPerQuantityChanged();
    partial void OnGrossWeightChanging(decimal value);
    partial void OnGrossWeightChanged();
    partial void OnPackageTareWeightChanging(System.Nullable<decimal> value);
    partial void OnPackageTareWeightChanged();
    partial void OnPalletTareWeightChanging(System.Nullable<decimal> value);
    partial void OnPalletTareWeightChanged();
    partial void OnNetWeightChanging(decimal value);
    partial void OnNetWeightChanged();
    partial void OnArrivalSequenceNoChanging(System.Nullable<int> value);
    partial void OnArrivalSequenceNoChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnSourceBarcodeChanging(string value);
    partial void OnSourceBarcodeChanged();
    partial void OnLastMaterialChanging(System.Nullable<short> value);
    partial void OnLastMaterialChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(short value);
    partial void OnIsLockedChanged();
    #endregion
		
		public TrnStorageReceivingPallet()
		{
			this._TrnPCDetails = new EntitySet<TrnPCDetail>(new Action<TrnPCDetail>(this.attach_TrnPCDetails), new Action<TrnPCDetail>(this.detach_TrnPCDetails));
			this._TrnStoragePickMaterials = new EntitySet<TrnStoragePickMaterial>(new Action<TrnStoragePickMaterial>(this.attach_TrnStoragePickMaterials), new Action<TrnStoragePickMaterial>(this.detach_TrnStoragePickMaterials));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageStockTransferMaterials = new EntitySet<TrnStorageStockTransferMaterial>(new Action<TrnStorageStockTransferMaterial>(this.attach_TrnStorageStockTransferMaterials), new Action<TrnStorageStockTransferMaterial>(this.detach_TrnStorageStockTransferMaterials));
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			this._TrnStorageReceiving = default(EntityRef<TrnStorageReceiving>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingId", DbType="Int NOT NULL")]
		public int StorageReceivingId
		{
			get
			{
				return this._StorageReceivingId;
			}
			set
			{
				if ((this._StorageReceivingId != value))
				{
					if (this._TrnStorageReceiving.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingId = value;
					this.SendPropertyChanged("StorageReceivingId");
					this.OnStorageReceivingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingOrderId", DbType="Int")]
		public System.Nullable<int> ReceivingOrderId
		{
			get
			{
				return this._ReceivingOrderId;
			}
			set
			{
				if ((this._ReceivingOrderId != value))
				{
					this.OnReceivingOrderIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivingOrderId = value;
					this.SendPropertyChanged("ReceivingOrderId");
					this.OnReceivingOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PalletNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PalletNumber
		{
			get
			{
				return this._PalletNumber;
			}
			set
			{
				if ((this._PalletNumber != value))
				{
					this.OnPalletNumberChanging(value);
					this.SendPropertyChanging();
					this._PalletNumber = value;
					this.SendPropertyChanged("PalletNumber");
					this.OnPalletNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualPalletNumber", DbType="NVarChar(50)")]
		public string ManualPalletNumber
		{
			get
			{
				return this._ManualPalletNumber;
			}
			set
			{
				if ((this._ManualPalletNumber != value))
				{
					this.OnManualPalletNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualPalletNumber = value;
					this.SendPropertyChanged("ManualPalletNumber");
					this.OnManualPalletNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weighted", DbType="NVarChar(50)")]
		public string Weighted
		{
			get
			{
				return this._Weighted;
			}
			set
			{
				if ((this._Weighted != value))
				{
					this.OnWeightedChanging(value);
					this.SendPropertyChanging();
					this._Weighted = value;
					this.SendPropertyChanged("Weighted");
					this.OnWeightedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxNumber", DbType="NVarChar(50)")]
		public string BoxNumber
		{
			get
			{
				return this._BoxNumber;
			}
			set
			{
				if ((this._BoxNumber != value))
				{
					this.OnBoxNumberChanging(value);
					this.SendPropertyChanging();
					this._BoxNumber = value;
					this.SendPropertyChanged("BoxNumber");
					this.OnBoxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorBatchNumber", DbType="NVarChar(10)")]
		public string VendorBatchNumber
		{
			get
			{
				return this._VendorBatchNumber;
			}
			set
			{
				if ((this._VendorBatchNumber != value))
				{
					this.OnVendorBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._VendorBatchNumber = value;
					this.SendPropertyChanged("VendorBatchNumber");
					this.OnVendorBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCode", DbType="NVarChar(50)")]
		public string BatchCode
		{
			get
			{
				return this._BatchCode;
			}
			set
			{
				if ((this._BatchCode != value))
				{
					this.OnBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._BatchCode = value;
					this.SendPropertyChanged("BatchCode");
					this.OnBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDaysToPrompAlert", DbType="Int")]
		public System.Nullable<int> NoDaysToPrompAlert
		{
			get
			{
				return this._NoDaysToPrompAlert;
			}
			set
			{
				if ((this._NoDaysToPrompAlert != value))
				{
					this.OnNoDaysToPrompAlertChanging(value);
					this.SendPropertyChanging();
					this._NoDaysToPrompAlert = value;
					this.SendPropertyChanged("NoDaysToPrompAlert");
					this.OnNoDaysToPrompAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ManufactureDate
		{
			get
			{
				return this._ManufactureDate;
			}
			set
			{
				if ((this._ManufactureDate != value))
				{
					this.OnManufactureDateChanging(value);
					this.SendPropertyChanging();
					this._ManufactureDate = value;
					this.SendPropertyChanged("ManufactureDate");
					this.OnManufactureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayUnitCode", DbType="SmallInt")]
		public System.Nullable<short> DisplayUnitCode
		{
			get
			{
				return this._DisplayUnitCode;
			}
			set
			{
				if ((this._DisplayUnitCode != value))
				{
					this.OnDisplayUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._DisplayUnitCode = value;
					this.SendPropertyChanged("DisplayUnitCode");
					this.OnDisplayUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPerQuantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal WeightPerQuantity
		{
			get
			{
				return this._WeightPerQuantity;
			}
			set
			{
				if ((this._WeightPerQuantity != value))
				{
					this.OnWeightPerQuantityChanging(value);
					this.SendPropertyChanging();
					this._WeightPerQuantity = value;
					this.SendPropertyChanged("WeightPerQuantity");
					this.OnWeightPerQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight", DbType="Decimal(18,4) NOT NULL")]
		public decimal GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTareWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PackageTareWeight
		{
			get
			{
				return this._PackageTareWeight;
			}
			set
			{
				if ((this._PackageTareWeight != value))
				{
					this.OnPackageTareWeightChanging(value);
					this.SendPropertyChanging();
					this._PackageTareWeight = value;
					this.SendPropertyChanged("PackageTareWeight");
					this.OnPackageTareWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PalletTareWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PalletTareWeight
		{
			get
			{
				return this._PalletTareWeight;
			}
			set
			{
				if ((this._PalletTareWeight != value))
				{
					this.OnPalletTareWeightChanging(value);
					this.SendPropertyChanging();
					this._PalletTareWeight = value;
					this.SendPropertyChanged("PalletTareWeight");
					this.OnPalletTareWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetWeight", DbType="Decimal(18,4) NOT NULL")]
		public decimal NetWeight
		{
			get
			{
				return this._NetWeight;
			}
			set
			{
				if ((this._NetWeight != value))
				{
					this.OnNetWeightChanging(value);
					this.SendPropertyChanging();
					this._NetWeight = value;
					this.SendPropertyChanged("NetWeight");
					this.OnNetWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalSequenceNo", DbType="Int")]
		public System.Nullable<int> ArrivalSequenceNo
		{
			get
			{
				return this._ArrivalSequenceNo;
			}
			set
			{
				if ((this._ArrivalSequenceNo != value))
				{
					this.OnArrivalSequenceNoChanging(value);
					this.SendPropertyChanging();
					this._ArrivalSequenceNo = value;
					this.SendPropertyChanged("ArrivalSequenceNo");
					this.OnArrivalSequenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(MAX)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceBarcode", DbType="NVarChar(30)")]
		public string SourceBarcode
		{
			get
			{
				return this._SourceBarcode;
			}
			set
			{
				if ((this._SourceBarcode != value))
				{
					this.OnSourceBarcodeChanging(value);
					this.SendPropertyChanging();
					this._SourceBarcode = value;
					this.SendPropertyChanged("SourceBarcode");
					this.OnSourceBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMaterial", DbType="SmallInt")]
		public System.Nullable<short> LastMaterial
		{
			get
			{
				return this._LastMaterial;
			}
			set
			{
				if ((this._LastMaterial != value))
				{
					this.OnLastMaterialChanging(value);
					this.SendPropertyChanging();
					this._LastMaterial = value;
					this.SendPropertyChanged("LastMaterial");
					this.OnLastMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt NOT NULL")]
		public short IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnPCDetail", Storage="_TrnPCDetails", ThisKey="Id", OtherKey="StorageReceivingPalletId")]
		public EntitySet<TrnPCDetail> TrnPCDetails
		{
			get
			{
				return this._TrnPCDetails;
			}
			set
			{
				this._TrnPCDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStoragePickMaterial", Storage="_TrnStoragePickMaterials", ThisKey="Id", OtherKey="StorageReceivingPalletId")]
		public EntitySet<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this._TrnStoragePickMaterials;
			}
			set
			{
				this._TrnStoragePickMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="StorageReceivingPalletId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransferMaterials", ThisKey="Id", OtherKey="StorageReceivingPalletId")]
		public EntitySet<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this._TrnStorageStockTransferMaterials;
			}
			set
			{
				this._TrnStorageStockTransferMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageReceivingPallet", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.TrnStorageReceivingPallets.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageReceivingPallet", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.TrnStorageReceivingPallets.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceivingPallet", Storage="_sysUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.TrnStorageReceivingPallets.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageReceivingPallet1", Storage="_sysUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.TrnStorageReceivingPallets1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceiving_TrnStorageReceivingPallet", Storage="_TrnStorageReceiving", ThisKey="StorageReceivingId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStorageReceiving TrnStorageReceiving
		{
			get
			{
				return this._TrnStorageReceiving.Entity;
			}
			set
			{
				TrnStorageReceiving previousValue = this._TrnStorageReceiving.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceiving.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceiving.Entity = null;
						previousValue.TrnStorageReceivingPallets.Remove(this);
					}
					this._TrnStorageReceiving.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets.Add(this);
						this._StorageReceivingId = value.Id;
					}
					else
					{
						this._StorageReceivingId = default(int);
					}
					this.SendPropertyChanged("TrnStorageReceiving");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageReceivingPallet", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.TrnStorageReceivingPallets.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.TrnStorageReceivingPallets.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = this;
		}
		
		private void detach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = null;
		}
		
		private void attach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = this;
		}
		
		private void detach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = null;
		}
		
		private void attach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = this;
		}
		
		private void detach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageReceivingPallet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStorageStockTransfer")]
	public partial class TrnStorageStockTransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WarehouseId;
		
		private string _STNumber;
		
		private System.DateTime _STDate;
		
		private int _ToWarehouseId;
		
		private string _Particulars;
		
		private string _ManualSTNumber;
		
		private bool _IsLocked;
		
		private System.Nullable<int> _CreatedById;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<int> _UpdatedById;
		
		private System.Nullable<System.DateTime> _UpdatedDateTime;
		
		private EntitySet<TrnStorageStockTransferMaterial> _TrnStorageStockTransferMaterials;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<MstWarehouse> _MstWarehouse1;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnSTNumberChanging(string value);
    partial void OnSTNumberChanged();
    partial void OnSTDateChanging(System.DateTime value);
    partial void OnSTDateChanged();
    partial void OnToWarehouseIdChanging(int value);
    partial void OnToWarehouseIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualSTNumberChanging(string value);
    partial void OnManualSTNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(System.Nullable<int> value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(System.Nullable<int> value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStorageStockTransfer()
		{
			this._TrnStorageStockTransferMaterials = new EntitySet<TrnStorageStockTransferMaterial>(new Action<TrnStorageStockTransferMaterial>(this.attach_TrnStorageStockTransferMaterials), new Action<TrnStorageStockTransferMaterial>(this.detach_TrnStorageStockTransferMaterials));
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._MstWarehouse1 = default(EntityRef<MstWarehouse>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STNumber
		{
			get
			{
				return this._STNumber;
			}
			set
			{
				if ((this._STNumber != value))
				{
					this.OnSTNumberChanging(value);
					this.SendPropertyChanging();
					this._STNumber = value;
					this.SendPropertyChanged("STNumber");
					this.OnSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STDate", DbType="DateTime NOT NULL")]
		public System.DateTime STDate
		{
			get
			{
				return this._STDate;
			}
			set
			{
				if ((this._STDate != value))
				{
					this.OnSTDateChanging(value);
					this.SendPropertyChanging();
					this._STDate = value;
					this.SendPropertyChanged("STDate");
					this.OnSTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToWarehouseId", DbType="Int NOT NULL")]
		public int ToWarehouseId
		{
			get
			{
				return this._ToWarehouseId;
			}
			set
			{
				if ((this._ToWarehouseId != value))
				{
					if (this._MstWarehouse1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._ToWarehouseId = value;
					this.SendPropertyChanged("ToWarehouseId");
					this.OnToWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSTNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManualSTNumber
		{
			get
			{
				return this._ManualSTNumber;
			}
			set
			{
				if ((this._ManualSTNumber != value))
				{
					this.OnManualSTNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSTNumber = value;
					this.SendPropertyChanged("ManualSTNumber");
					this.OnManualSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int")]
		public System.Nullable<int> CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int")]
		public System.Nullable<int> UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageStockTransfer_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransferMaterials", ThisKey="Id", OtherKey="StorageStockTransferId")]
		public EntitySet<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this._TrnStorageStockTransferMaterials;
			}
			set
			{
				this._TrnStorageStockTransferMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageStockTransfer", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.TrnStorageStockTransfers.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransfers.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_TrnStorageStockTransfer1", Storage="_MstWarehouse1", ThisKey="ToWarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse1
		{
			get
			{
				return this._MstWarehouse1.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse1.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse1.Entity = null;
						previousValue.TrnStorageStockTransfers1.Remove(this);
					}
					this._MstWarehouse1.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransfers1.Add(this);
						this._ToWarehouseId = value.Id;
					}
					else
					{
						this._ToWarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageStockTransfer", Storage="_sysUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.TrnStorageStockTransfers.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransfers.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_TrnStorageStockTransfer1", Storage="_sysUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.TrnStorageStockTransfers1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransfers1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageStockTransfer = this;
		}
		
		private void detach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TrnStorageStockTransfer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStorageStockTransferMaterial")]
	public partial class TrnStorageStockTransferMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StorageStockTransferId;
		
		private int _StorageReceivingPalletId;
		
		private int _LocationId;
		
		private int _MaterialId;
		
		private decimal _Quantity;
		
		private int _UnitId;
		
		private decimal _Weight;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<TrnStorageReceivingPallet> _TrnStorageReceivingPallet;
		
		private EntityRef<TrnStorageStockTransfer> _TrnStorageStockTransfer;
		
		private EntityRef<mstLocation> _mstLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStorageStockTransferIdChanging(int value);
    partial void OnStorageStockTransferIdChanged();
    partial void OnStorageReceivingPalletIdChanging(int value);
    partial void OnStorageReceivingPalletIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    #endregion
		
		public TrnStorageStockTransferMaterial()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._TrnStorageReceivingPallet = default(EntityRef<TrnStorageReceivingPallet>);
			this._TrnStorageStockTransfer = default(EntityRef<TrnStorageStockTransfer>);
			this._mstLocation = default(EntityRef<mstLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageStockTransferId", DbType="Int NOT NULL")]
		public int StorageStockTransferId
		{
			get
			{
				return this._StorageStockTransferId;
			}
			set
			{
				if ((this._StorageStockTransferId != value))
				{
					if (this._TrnStorageStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageStockTransferIdChanging(value);
					this.SendPropertyChanging();
					this._StorageStockTransferId = value;
					this.SendPropertyChanged("StorageStockTransferId");
					this.OnStorageStockTransferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageReceivingPalletId", DbType="Int NOT NULL")]
		public int StorageReceivingPalletId
		{
			get
			{
				return this._StorageReceivingPalletId;
			}
			set
			{
				if ((this._StorageReceivingPalletId != value))
				{
					if (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageReceivingPalletIdChanging(value);
					this.SendPropertyChanging();
					this._StorageReceivingPalletId = value;
					this.SendPropertyChanged("StorageReceivingPalletId");
					this.OnStorageReceivingPalletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._mstLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_TrnStorageStockTransferMaterial", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.TrnStorageStockTransferMaterials.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransferMaterials.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_TrnStorageStockTransferMaterial", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.TrnStorageStockTransferMaterials.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransferMaterials.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageReceivingPallet_TrnStorageStockTransferMaterial", Storage="_TrnStorageReceivingPallet", ThisKey="StorageReceivingPalletId", OtherKey="Id", IsForeignKey=true)]
		public TrnStorageReceivingPallet TrnStorageReceivingPallet
		{
			get
			{
				return this._TrnStorageReceivingPallet.Entity;
			}
			set
			{
				TrnStorageReceivingPallet previousValue = this._TrnStorageReceivingPallet.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageReceivingPallet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageReceivingPallet.Entity = null;
						previousValue.TrnStorageStockTransferMaterials.Remove(this);
					}
					this._TrnStorageReceivingPallet.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransferMaterials.Add(this);
						this._StorageReceivingPalletId = value.Id;
					}
					else
					{
						this._StorageReceivingPalletId = default(int);
					}
					this.SendPropertyChanged("TrnStorageReceivingPallet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStorageStockTransfer_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransfer", ThisKey="StorageStockTransferId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStorageStockTransfer TrnStorageStockTransfer
		{
			get
			{
				return this._TrnStorageStockTransfer.Entity;
			}
			set
			{
				TrnStorageStockTransfer previousValue = this._TrnStorageStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStorageStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStorageStockTransfer.Entity = null;
						previousValue.TrnStorageStockTransferMaterials.Remove(this);
					}
					this._TrnStorageStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransferMaterials.Add(this);
						this._StorageStockTransferId = value.Id;
					}
					else
					{
						this._StorageStockTransferId = default(int);
					}
					this.SendPropertyChanged("TrnStorageStockTransfer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageStockTransferMaterial", Storage="_mstLocation", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public mstLocation mstLocation
		{
			get
			{
				return this._mstLocation.Entity;
			}
			set
			{
				mstLocation previousValue = this._mstLocation.Entity;
				if (((previousValue != value) 
							|| (this._mstLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstLocation.Entity = null;
						previousValue.TrnStorageStockTransferMaterials.Remove(this);
					}
					this._mstLocation.Entity = value;
					if ((value != null))
					{
						value.TrnStorageStockTransferMaterials.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(int);
					}
					this.SendPropertyChanged("mstLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnWithdrawalOrder")]
	public partial class trnWithdrawalOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WithdrawalOrderNumber;
		
		private System.Nullable<int> _WarehouseId;
		
		private System.Nullable<System.DateTime> _WithdrawalOrderDate;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Weight;
		
		private string _Particulars;
		
		private System.Nullable<short> _IsApproved;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private System.Nullable<int> _OldWithdrawalOrderId;
		
		private EntitySet<TrnStoragePick> _TrnStoragePicks;
		
		private EntitySet<trnWithdrawalOrderBatch> _trnWithdrawalOrderBatches;
		
		private EntitySet<trnWithdrawalOrderMaterial> _trnWithdrawalOrderMaterials;
		
		private EntityRef<mstCustomer> _mstCustomer;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<sysUser> _sysUser;
		
		private EntityRef<sysUser> _sysUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWithdrawalOrderNumberChanging(string value);
    partial void OnWithdrawalOrderNumberChanged();
    partial void OnWarehouseIdChanging(System.Nullable<int> value);
    partial void OnWarehouseIdChanged();
    partial void OnWithdrawalOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWithdrawalOrderDateChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnIsApprovedChanging(System.Nullable<short> value);
    partial void OnIsApprovedChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    partial void OnOldWithdrawalOrderIdChanging(System.Nullable<int> value);
    partial void OnOldWithdrawalOrderIdChanged();
    #endregion
		
		public trnWithdrawalOrder()
		{
			this._TrnStoragePicks = new EntitySet<TrnStoragePick>(new Action<TrnStoragePick>(this.attach_TrnStoragePicks), new Action<TrnStoragePick>(this.detach_TrnStoragePicks));
			this._trnWithdrawalOrderBatches = new EntitySet<trnWithdrawalOrderBatch>(new Action<trnWithdrawalOrderBatch>(this.attach_trnWithdrawalOrderBatches), new Action<trnWithdrawalOrderBatch>(this.detach_trnWithdrawalOrderBatches));
			this._trnWithdrawalOrderMaterials = new EntitySet<trnWithdrawalOrderMaterial>(new Action<trnWithdrawalOrderMaterial>(this.attach_trnWithdrawalOrderMaterials), new Action<trnWithdrawalOrderMaterial>(this.detach_trnWithdrawalOrderMaterials));
			this._mstCustomer = default(EntityRef<mstCustomer>);
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._sysUser = default(EntityRef<sysUser>);
			this._sysUser1 = default(EntityRef<sysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalOrderNumber", DbType="NVarChar(50)")]
		public string WithdrawalOrderNumber
		{
			get
			{
				return this._WithdrawalOrderNumber;
			}
			set
			{
				if ((this._WithdrawalOrderNumber != value))
				{
					this.OnWithdrawalOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalOrderNumber = value;
					this.SendPropertyChanged("WithdrawalOrderNumber");
					this.OnWithdrawalOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int")]
		public System.Nullable<int> WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WithdrawalOrderDate
		{
			get
			{
				return this._WithdrawalOrderDate;
			}
			set
			{
				if ((this._WithdrawalOrderDate != value))
				{
					this.OnWithdrawalOrderDateChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalOrderDate = value;
					this.SendPropertyChanged("WithdrawalOrderDate");
					this.OnWithdrawalOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._mstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="SmallInt")]
		public System.Nullable<short> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._sysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					if (this._sysUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldWithdrawalOrderId", DbType="Int")]
		public System.Nullable<int> OldWithdrawalOrderId
		{
			get
			{
				return this._OldWithdrawalOrderId;
			}
			set
			{
				if ((this._OldWithdrawalOrderId != value))
				{
					this.OnOldWithdrawalOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OldWithdrawalOrderId = value;
					this.SendPropertyChanged("OldWithdrawalOrderId");
					this.OnOldWithdrawalOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_TrnStoragePick", Storage="_TrnStoragePicks", ThisKey="Id", OtherKey="WithdrawalOrderId")]
		public EntitySet<TrnStoragePick> TrnStoragePicks
		{
			get
			{
				return this._TrnStoragePicks;
			}
			set
			{
				this._TrnStoragePicks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_trnWithdrawalOrderBatch", Storage="_trnWithdrawalOrderBatches", ThisKey="Id", OtherKey="WithdrawalOrderId")]
		public EntitySet<trnWithdrawalOrderBatch> trnWithdrawalOrderBatches
		{
			get
			{
				return this._trnWithdrawalOrderBatches;
			}
			set
			{
				this._trnWithdrawalOrderBatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_trnWithdrawalOrderMaterial", Storage="_trnWithdrawalOrderMaterials", ThisKey="Id", OtherKey="WithdrawalOrderId")]
		public EntitySet<trnWithdrawalOrderMaterial> trnWithdrawalOrderMaterials
		{
			get
			{
				return this._trnWithdrawalOrderMaterials;
			}
			set
			{
				this._trnWithdrawalOrderMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstCustomer_trnWithdrawalOrder", Storage="_mstCustomer", ThisKey="CustomerID", OtherKey="Id", IsForeignKey=true)]
		public mstCustomer mstCustomer
		{
			get
			{
				return this._mstCustomer.Entity;
			}
			set
			{
				mstCustomer previousValue = this._mstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._mstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstCustomer.Entity = null;
						previousValue.trnWithdrawalOrders.Remove(this);
					}
					this._mstCustomer.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrders.Add(this);
						this._CustomerID = value.Id;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_trnWithdrawalOrder", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.trnWithdrawalOrders.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrders.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_trnWithdrawalOrder", Storage="_sysUser", ThisKey="CreatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser
		{
			get
			{
				return this._sysUser.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser.Entity;
				if (((previousValue != value) 
							|| (this._sysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser.Entity = null;
						previousValue.trnWithdrawalOrders.Remove(this);
					}
					this._sysUser.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrders.Add(this);
						this._CreatedBy = value.Id;
					}
					else
					{
						this._CreatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sysUser_trnWithdrawalOrder1", Storage="_sysUser1", ThisKey="UpdatedBy", OtherKey="Id", IsForeignKey=true)]
		public sysUser sysUser1
		{
			get
			{
				return this._sysUser1.Entity;
			}
			set
			{
				sysUser previousValue = this._sysUser1.Entity;
				if (((previousValue != value) 
							|| (this._sysUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sysUser1.Entity = null;
						previousValue.trnWithdrawalOrders1.Remove(this);
					}
					this._sysUser1.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrders1.Add(this);
						this._UpdatedBy = value.Id;
					}
					else
					{
						this._UpdatedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("sysUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = this;
		}
		
		private void detach_TrnStoragePicks(TrnStoragePick entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = null;
		}
		
		private void attach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = this;
		}
		
		private void detach_trnWithdrawalOrderBatches(trnWithdrawalOrderBatch entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = null;
		}
		
		private void attach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = this;
		}
		
		private void detach_trnWithdrawalOrderMaterials(trnWithdrawalOrderMaterial entity)
		{
			this.SendPropertyChanging();
			entity.trnWithdrawalOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnWithdrawalOrderBatch")]
	public partial class trnWithdrawalOrderBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WarehouseId;
		
		private int _WithdrawalOrderId;
		
		private int _MaterialId;
		
		private int _UnitId;
		
		private string _BatchCode;
		
		private decimal _Quantity;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<MstWarehouse> _MstWarehouse;
		
		private EntityRef<trnWithdrawalOrder> _trnWithdrawalOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWarehouseIdChanging(int value);
    partial void OnWarehouseIdChanged();
    partial void OnWithdrawalOrderIdChanging(int value);
    partial void OnWithdrawalOrderIdChanged();
    partial void OnMaterialIdChanging(int value);
    partial void OnMaterialIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnBatchCodeChanging(string value);
    partial void OnBatchCodeChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public trnWithdrawalOrderBatch()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._MstWarehouse = default(EntityRef<MstWarehouse>);
			this._trnWithdrawalOrder = default(EntityRef<trnWithdrawalOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseId", DbType="Int NOT NULL")]
		public int WarehouseId
		{
			get
			{
				return this._WarehouseId;
			}
			set
			{
				if ((this._WarehouseId != value))
				{
					if (this._MstWarehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseIdChanging(value);
					this.SendPropertyChanging();
					this._WarehouseId = value;
					this.SendPropertyChanged("WarehouseId");
					this.OnWarehouseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalOrderId", DbType="Int NOT NULL")]
		public int WithdrawalOrderId
		{
			get
			{
				return this._WithdrawalOrderId;
			}
			set
			{
				if ((this._WithdrawalOrderId != value))
				{
					if (this._trnWithdrawalOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWithdrawalOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalOrderId = value;
					this.SendPropertyChanged("WithdrawalOrderId");
					this.OnWithdrawalOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int NOT NULL")]
		public int MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BatchCode
		{
			get
			{
				return this._BatchCode;
			}
			set
			{
				if ((this._BatchCode != value))
				{
					this.OnBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._BatchCode = value;
					this.SendPropertyChanged("BatchCode");
					this.OnBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_trnWithdrawalOrderBatch", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.trnWithdrawalOrderBatches.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderBatches.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(int);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_trnWithdrawalOrderBatch", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.trnWithdrawalOrderBatches.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderBatches.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstWarehouse_trnWithdrawalOrderBatch", Storage="_MstWarehouse", ThisKey="WarehouseId", OtherKey="Id", IsForeignKey=true)]
		public MstWarehouse MstWarehouse
		{
			get
			{
				return this._MstWarehouse.Entity;
			}
			set
			{
				MstWarehouse previousValue = this._MstWarehouse.Entity;
				if (((previousValue != value) 
							|| (this._MstWarehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstWarehouse.Entity = null;
						previousValue.trnWithdrawalOrderBatches.Remove(this);
					}
					this._MstWarehouse.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderBatches.Add(this);
						this._WarehouseId = value.Id;
					}
					else
					{
						this._WarehouseId = default(int);
					}
					this.SendPropertyChanged("MstWarehouse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_trnWithdrawalOrderBatch", Storage="_trnWithdrawalOrder", ThisKey="WithdrawalOrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public trnWithdrawalOrder trnWithdrawalOrder
		{
			get
			{
				return this._trnWithdrawalOrder.Entity;
			}
			set
			{
				trnWithdrawalOrder previousValue = this._trnWithdrawalOrder.Entity;
				if (((previousValue != value) 
							|| (this._trnWithdrawalOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnWithdrawalOrder.Entity = null;
						previousValue.trnWithdrawalOrderBatches.Remove(this);
					}
					this._trnWithdrawalOrder.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderBatches.Add(this);
						this._WithdrawalOrderId = value.Id;
					}
					else
					{
						this._WithdrawalOrderId = default(int);
					}
					this.SendPropertyChanged("trnWithdrawalOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnWithdrawalOrderMaterial")]
	public partial class trnWithdrawalOrderMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _WithdrawalOrderId;
		
		private System.Nullable<int> _MaterialId;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Weight;
		
		private System.Nullable<int> _UnitId;
		
		private System.Nullable<int> _OldStorageReceivingId;
		
		private string _Barcode;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntityRef<mstMaterial> _mstMaterial;
		
		private EntityRef<mstUnit> _mstUnit;
		
		private EntityRef<trnWithdrawalOrder> _trnWithdrawalOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWithdrawalOrderIdChanging(System.Nullable<int> value);
    partial void OnWithdrawalOrderIdChanged();
    partial void OnMaterialIdChanging(System.Nullable<int> value);
    partial void OnMaterialIdChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnUnitIdChanging(System.Nullable<int> value);
    partial void OnUnitIdChanged();
    partial void OnOldStorageReceivingIdChanging(System.Nullable<int> value);
    partial void OnOldStorageReceivingIdChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public trnWithdrawalOrderMaterial()
		{
			this._mstMaterial = default(EntityRef<mstMaterial>);
			this._mstUnit = default(EntityRef<mstUnit>);
			this._trnWithdrawalOrder = default(EntityRef<trnWithdrawalOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalOrderId", DbType="Int")]
		public System.Nullable<int> WithdrawalOrderId
		{
			get
			{
				return this._WithdrawalOrderId;
			}
			set
			{
				if ((this._WithdrawalOrderId != value))
				{
					if (this._trnWithdrawalOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWithdrawalOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalOrderId = value;
					this.SendPropertyChanged("WithdrawalOrderId");
					this.OnWithdrawalOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="Int")]
		public System.Nullable<int> MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					if (this._mstMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int")]
		public System.Nullable<int> UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._mstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldStorageReceivingId", DbType="Int")]
		public System.Nullable<int> OldStorageReceivingId
		{
			get
			{
				return this._OldStorageReceivingId;
			}
			set
			{
				if ((this._OldStorageReceivingId != value))
				{
					this.OnOldStorageReceivingIdChanging(value);
					this.SendPropertyChanging();
					this._OldStorageReceivingId = value;
					this.SendPropertyChanged("OldStorageReceivingId");
					this.OnOldStorageReceivingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstMaterial_trnWithdrawalOrderMaterial", Storage="_mstMaterial", ThisKey="MaterialId", OtherKey="Id", IsForeignKey=true)]
		public mstMaterial mstMaterial
		{
			get
			{
				return this._mstMaterial.Entity;
			}
			set
			{
				mstMaterial previousValue = this._mstMaterial.Entity;
				if (((previousValue != value) 
							|| (this._mstMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstMaterial.Entity = null;
						previousValue.trnWithdrawalOrderMaterials.Remove(this);
					}
					this._mstMaterial.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderMaterials.Add(this);
						this._MaterialId = value.Id;
					}
					else
					{
						this._MaterialId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUnit_trnWithdrawalOrderMaterial", Storage="_mstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public mstUnit mstUnit
		{
			get
			{
				return this._mstUnit.Entity;
			}
			set
			{
				mstUnit previousValue = this._mstUnit.Entity;
				if (((previousValue != value) 
							|| (this._mstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUnit.Entity = null;
						previousValue.trnWithdrawalOrderMaterials.Remove(this);
					}
					this._mstUnit.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderMaterials.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnWithdrawalOrder_trnWithdrawalOrderMaterial", Storage="_trnWithdrawalOrder", ThisKey="WithdrawalOrderId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public trnWithdrawalOrder trnWithdrawalOrder
		{
			get
			{
				return this._trnWithdrawalOrder.Entity;
			}
			set
			{
				trnWithdrawalOrder previousValue = this._trnWithdrawalOrder.Entity;
				if (((previousValue != value) 
							|| (this._trnWithdrawalOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnWithdrawalOrder.Entity = null;
						previousValue.trnWithdrawalOrderMaterials.Remove(this);
					}
					this._trnWithdrawalOrder.Entity = value;
					if ((value != null))
					{
						value.trnWithdrawalOrderMaterials.Add(this);
						this._WithdrawalOrderId = value.Id;
					}
					else
					{
						this._WithdrawalOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("trnWithdrawalOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstLocation")]
	public partial class mstLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LocationNumber;
		
		private string _LocationName;
		
		private string _Bay;
		
		private string _Column;
		
		private string _Row;
		
		private System.Nullable<int> _RoomId;
		
		private System.Nullable<decimal> _Capacity;
		
		private System.Nullable<decimal> _TotalWeight;
		
		private System.Nullable<decimal> _PalletCount;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<short> _IsLocked;
		
		private EntitySet<mstMaterialInventory> _mstMaterialInventories;
		
		private EntitySet<TrnPCDetail> _TrnPCDetails;
		
		private EntitySet<TrnStoragePickMaterial> _TrnStoragePickMaterials;
		
		private EntitySet<TrnStorageInventory> _TrnStorageInventories;
		
		private EntitySet<TrnStorageReceivingPallet> _TrnStorageReceivingPallets;
		
		private EntitySet<TrnStorageStockTransferMaterial> _TrnStorageStockTransferMaterials;
		
		private EntityRef<mstRoom> _mstRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLocationNumberChanging(string value);
    partial void OnLocationNumberChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnBayChanging(string value);
    partial void OnBayChanged();
    partial void OnColumnChanging(string value);
    partial void OnColumnChanged();
    partial void OnRowChanging(string value);
    partial void OnRowChanged();
    partial void OnRoomIdChanging(System.Nullable<int> value);
    partial void OnRoomIdChanged();
    partial void OnCapacityChanging(System.Nullable<decimal> value);
    partial void OnCapacityChanged();
    partial void OnTotalWeightChanging(System.Nullable<decimal> value);
    partial void OnTotalWeightChanged();
    partial void OnPalletCountChanging(System.Nullable<decimal> value);
    partial void OnPalletCountChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsLockedChanging(System.Nullable<short> value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstLocation()
		{
			this._mstMaterialInventories = new EntitySet<mstMaterialInventory>(new Action<mstMaterialInventory>(this.attach_mstMaterialInventories), new Action<mstMaterialInventory>(this.detach_mstMaterialInventories));
			this._TrnPCDetails = new EntitySet<TrnPCDetail>(new Action<TrnPCDetail>(this.attach_TrnPCDetails), new Action<TrnPCDetail>(this.detach_TrnPCDetails));
			this._TrnStoragePickMaterials = new EntitySet<TrnStoragePickMaterial>(new Action<TrnStoragePickMaterial>(this.attach_TrnStoragePickMaterials), new Action<TrnStoragePickMaterial>(this.detach_TrnStoragePickMaterials));
			this._TrnStorageInventories = new EntitySet<TrnStorageInventory>(new Action<TrnStorageInventory>(this.attach_TrnStorageInventories), new Action<TrnStorageInventory>(this.detach_TrnStorageInventories));
			this._TrnStorageReceivingPallets = new EntitySet<TrnStorageReceivingPallet>(new Action<TrnStorageReceivingPallet>(this.attach_TrnStorageReceivingPallets), new Action<TrnStorageReceivingPallet>(this.detach_TrnStorageReceivingPallets));
			this._TrnStorageStockTransferMaterials = new EntitySet<TrnStorageStockTransferMaterial>(new Action<TrnStorageStockTransferMaterial>(this.attach_TrnStorageStockTransferMaterials), new Action<TrnStorageStockTransferMaterial>(this.detach_TrnStorageStockTransferMaterials));
			this._mstRoom = default(EntityRef<mstRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationNumber", DbType="NVarChar(50)")]
		public string LocationNumber
		{
			get
			{
				return this._LocationNumber;
			}
			set
			{
				if ((this._LocationNumber != value))
				{
					this.OnLocationNumberChanging(value);
					this.SendPropertyChanging();
					this._LocationNumber = value;
					this.SendPropertyChanged("LocationNumber");
					this.OnLocationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bay", DbType="NVarChar(50)")]
		public string Bay
		{
			get
			{
				return this._Bay;
			}
			set
			{
				if ((this._Bay != value))
				{
					this.OnBayChanging(value);
					this.SendPropertyChanging();
					this._Bay = value;
					this.SendPropertyChanged("Bay");
					this.OnBayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Column]", Storage="_Column", DbType="NVarChar(50)")]
		public string Column
		{
			get
			{
				return this._Column;
			}
			set
			{
				if ((this._Column != value))
				{
					this.OnColumnChanging(value);
					this.SendPropertyChanging();
					this._Column = value;
					this.SendPropertyChanged("Column");
					this.OnColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="NVarChar(50)")]
		public string Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomId", DbType="Int")]
		public System.Nullable<int> RoomId
		{
			get
			{
				return this._RoomId;
			}
			set
			{
				if ((this._RoomId != value))
				{
					if (this._mstRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomIdChanging(value);
					this.SendPropertyChanging();
					this._RoomId = value;
					this.SendPropertyChanged("RoomId");
					this.OnRoomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWeight", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> TotalWeight
		{
			get
			{
				return this._TotalWeight;
			}
			set
			{
				if ((this._TotalWeight != value))
				{
					this.OnTotalWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight = value;
					this.SendPropertyChanged("TotalWeight");
					this.OnTotalWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PalletCount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> PalletCount
		{
			get
			{
				return this._PalletCount;
			}
			set
			{
				if ((this._PalletCount != value))
				{
					this.OnPalletCountChanging(value);
					this.SendPropertyChanging();
					this._PalletCount = value;
					this.SendPropertyChanged("PalletCount");
					this.OnPalletCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="SmallInt")]
		public System.Nullable<short> IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_mstMaterialInventory", Storage="_mstMaterialInventories", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<mstMaterialInventory> mstMaterialInventories
		{
			get
			{
				return this._mstMaterialInventories;
			}
			set
			{
				this._mstMaterialInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnPCDetail", Storage="_TrnPCDetails", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<TrnPCDetail> TrnPCDetails
		{
			get
			{
				return this._TrnPCDetails;
			}
			set
			{
				this._TrnPCDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStoragePickMaterial", Storage="_TrnStoragePickMaterials", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<TrnStoragePickMaterial> TrnStoragePickMaterials
		{
			get
			{
				return this._TrnStoragePickMaterials;
			}
			set
			{
				this._TrnStoragePickMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageInventory", Storage="_TrnStorageInventories", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<TrnStorageInventory> TrnStorageInventories
		{
			get
			{
				return this._TrnStorageInventories;
			}
			set
			{
				this._TrnStorageInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageReceivingPallet", Storage="_TrnStorageReceivingPallets", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<TrnStorageReceivingPallet> TrnStorageReceivingPallets
		{
			get
			{
				return this._TrnStorageReceivingPallets;
			}
			set
			{
				this._TrnStorageReceivingPallets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstLocation_TrnStorageStockTransferMaterial", Storage="_TrnStorageStockTransferMaterials", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<TrnStorageStockTransferMaterial> TrnStorageStockTransferMaterials
		{
			get
			{
				return this._TrnStorageStockTransferMaterials;
			}
			set
			{
				this._TrnStorageStockTransferMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstRoom_mstLocation", Storage="_mstRoom", ThisKey="RoomId", OtherKey="Id", IsForeignKey=true)]
		public mstRoom mstRoom
		{
			get
			{
				return this._mstRoom.Entity;
			}
			set
			{
				mstRoom previousValue = this._mstRoom.Entity;
				if (((previousValue != value) 
							|| (this._mstRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstRoom.Entity = null;
						previousValue.mstLocations.Remove(this);
					}
					this._mstRoom.Entity = value;
					if ((value != null))
					{
						value.mstLocations.Add(this);
						this._RoomId = value.Id;
					}
					else
					{
						this._RoomId = default(Nullable<int>);
					}
					this.SendPropertyChanged("mstRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_mstMaterialInventories(mstMaterialInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
		
		private void attach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_TrnPCDetails(TrnPCDetail entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
		
		private void attach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_TrnStoragePickMaterials(TrnStoragePickMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
		
		private void attach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_TrnStorageInventories(TrnStorageInventory entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
		
		private void attach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_TrnStorageReceivingPallets(TrnStorageReceivingPallet entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
		
		private void attach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = this;
		}
		
		private void detach_TrnStorageStockTransferMaterials(TrnStorageStockTransferMaterial entity)
		{
			this.SendPropertyChanging();
			entity.mstLocation = null;
		}
	}
}
#pragma warning restore 1591
